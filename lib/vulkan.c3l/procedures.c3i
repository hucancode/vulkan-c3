//
// Vulkan wrapper generated from "https://raw.githubusercontent.com/KhronosGroup/Vulkan-Headers/master/include/vulkan/vulkan_core.h"
//
module vk;

import std::core::cinterop;

// Loader Procedure Types
alias ProcAllocationFunction = fn void*(void* pUserData, usz size, usz alignment, SystemAllocationScope allocationScope);
alias ProcCreateInstance = fn Result(InstanceCreateInfo* pCreateInfo, AllocationCallbacks* pAllocator, Instance* pInstance);
alias ProcDebugUtilsMessengerCallbackEXT = fn uint(DebugUtilsMessageSeverityFlagsEXT messageSeverity, DebugUtilsMessageTypeFlagsEXT messageTypes, DebugUtilsMessengerCallbackDataEXT* pCallbackData, void* pUserData);
alias ProcDeviceMemoryReportCallbackEXT = fn void(DeviceMemoryReportCallbackDataEXT* pCallbackData, void* pUserData);
alias ProcEnumerateInstanceExtensionProperties = fn Result(ZString pLayerName, uint* pPropertyCount, ExtensionProperties* pProperties);
alias ProcEnumerateInstanceLayerProperties = fn Result(uint* pPropertyCount, LayerProperties* pProperties);
alias ProcEnumerateInstanceVersion = fn Result(uint* pApiVersion);
alias ProcFreeFunction = fn void(void* pUserData, void* pMemory);
alias ProcInternalAllocationNotification = fn void(void* pUserData, usz size, InternalAllocationType allocationType, SystemAllocationScope allocationScope);
alias ProcInternalFreeNotification = fn void(void* pUserData, usz size, InternalAllocationType allocationType, SystemAllocationScope allocationScope);
alias ProcReallocationFunction = fn void*(void* pUserData, void* pOriginal, usz size, usz alignment, SystemAllocationScope allocationScope);

// Misc Procedure Types
alias ProcDebugReportCallbackEXT = fn uint(DebugReportFlagsEXT flags, DebugReportObjectTypeEXT objectType, ulong object, usz location, int messageCode, ZString pLayerPrefix, ZString pMessage, void* pUserData);
alias ProcVoidFunction = fn void();

// Instance Procedure Types
alias ProcAcquireDrmDisplayEXT = fn Result(PhysicalDevice physicalDevice, int drmFd, DisplayKHR display);
alias ProcAcquireWinrtDisplayNV = fn Result(PhysicalDevice physicalDevice, DisplayKHR display);
alias ProcCreateDebugReportCallbackEXT = fn Result(Instance instance, DebugReportCallbackCreateInfoEXT* pCreateInfo, AllocationCallbacks* pAllocator, DebugReportCallbackEXT* pCallback);
alias ProcCreateDebugUtilsMessengerEXT = fn Result(Instance instance, DebugUtilsMessengerCreateInfoEXT* pCreateInfo, AllocationCallbacks* pAllocator, DebugUtilsMessengerEXT* pMessenger);
alias ProcCreateDevice = fn Result(PhysicalDevice physicalDevice, DeviceCreateInfo* pCreateInfo, AllocationCallbacks* pAllocator, Device* pDevice);
alias ProcCreateDisplayModeKHR = fn Result(PhysicalDevice physicalDevice, DisplayKHR display, DisplayModeCreateInfoKHR* pCreateInfo, AllocationCallbacks* pAllocator, DisplayModeKHR* pMode);
alias ProcCreateDisplayPlaneSurfaceKHR = fn Result(Instance instance, DisplaySurfaceCreateInfoKHR* pCreateInfo, AllocationCallbacks* pAllocator, SurfaceKHR* pSurface);
alias ProcCreateHeadlessSurfaceEXT = fn Result(Instance instance, HeadlessSurfaceCreateInfoEXT* pCreateInfo, AllocationCallbacks* pAllocator, SurfaceKHR* pSurface);
alias ProcCreateIOSSurfaceMVK = fn Result(Instance instance, IOSSurfaceCreateInfoMVK* pCreateInfo, AllocationCallbacks* pAllocator, SurfaceKHR* pSurface);
alias ProcCreateMacOSSurfaceMVK = fn Result(Instance instance, MacOSSurfaceCreateInfoMVK* pCreateInfo, AllocationCallbacks* pAllocator, SurfaceKHR* pSurface);
alias ProcCreateMetalSurfaceEXT = fn Result(Instance instance, MetalSurfaceCreateInfoEXT* pCreateInfo, AllocationCallbacks* pAllocator, SurfaceKHR* pSurface);
alias ProcCreateWaylandSurfaceKHR = fn Result(Instance instance, WaylandSurfaceCreateInfoKHR* pCreateInfo, AllocationCallbacks* pAllocator, SurfaceKHR* pSurface);
alias ProcCreateWin32SurfaceKHR = fn Result(Instance instance, Win32SurfaceCreateInfoKHR* pCreateInfo, AllocationCallbacks* pAllocator, SurfaceKHR* pSurface);
alias ProcCreateXcbSurfaceKHR = fn Result(Instance instance, XcbSurfaceCreateInfoKHR* pCreateInfo, AllocationCallbacks* pAllocator, SurfaceKHR* pSurface);
alias ProcCreateXlibSurfaceKHR = fn Result(Instance instance, XlibSurfaceCreateInfoKHR* pCreateInfo, AllocationCallbacks* pAllocator, SurfaceKHR* pSurface);
alias ProcDebugReportMessageEXT = fn void(Instance instance, DebugReportFlagsEXT flags, DebugReportObjectTypeEXT objectType, ulong object, usz location, int messageCode, ZString pLayerPrefix, ZString pMessage);
alias ProcDestroyDebugReportCallbackEXT = fn void(Instance instance, DebugReportCallbackEXT callback, AllocationCallbacks* pAllocator);
alias ProcDestroyDebugUtilsMessengerEXT = fn void(Instance instance, DebugUtilsMessengerEXT messenger, AllocationCallbacks* pAllocator);
alias ProcDestroyInstance = fn void(Instance instance, AllocationCallbacks* pAllocator);
alias ProcDestroySurfaceKHR = fn void(Instance instance, SurfaceKHR surface, AllocationCallbacks* pAllocator);
alias ProcEnumerateDeviceExtensionProperties = fn Result(PhysicalDevice physicalDevice, ZString pLayerName, uint* pPropertyCount, ExtensionProperties* pProperties);
alias ProcEnumerateDeviceLayerProperties = fn Result(PhysicalDevice physicalDevice, uint* pPropertyCount, LayerProperties* pProperties);
alias ProcEnumeratePhysicalDeviceGroups = fn Result(Instance instance, uint* pPhysicalDeviceGroupCount, PhysicalDeviceGroupProperties* pPhysicalDeviceGroupProperties);
alias ProcEnumeratePhysicalDeviceGroupsKHR = fn Result(Instance instance, uint* pPhysicalDeviceGroupCount, PhysicalDeviceGroupProperties* pPhysicalDeviceGroupProperties);
alias ProcEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR = fn Result(PhysicalDevice physicalDevice, uint queueFamilyIndex, uint* pCounterCount, PerformanceCounterKHR* pCounters, PerformanceCounterDescriptionKHR* pCounterDescriptions);
alias ProcEnumeratePhysicalDevices = fn Result(Instance instance, uint* pPhysicalDeviceCount, PhysicalDevice* pPhysicalDevices);
alias ProcGetDisplayModeProperties2KHR = fn Result(PhysicalDevice physicalDevice, DisplayKHR display, uint* pPropertyCount, DisplayModeProperties2KHR* pProperties);
alias ProcGetDisplayModePropertiesKHR = fn Result(PhysicalDevice physicalDevice, DisplayKHR display, uint* pPropertyCount, DisplayModePropertiesKHR* pProperties);
alias ProcGetDisplayPlaneCapabilities2KHR = fn Result(PhysicalDevice physicalDevice, DisplayPlaneInfo2KHR* pDisplayPlaneInfo, DisplayPlaneCapabilities2KHR* pCapabilities);
alias ProcGetDisplayPlaneCapabilitiesKHR = fn Result(PhysicalDevice physicalDevice, DisplayModeKHR mode, uint planeIndex, DisplayPlaneCapabilitiesKHR* pCapabilities);
alias ProcGetDisplayPlaneSupportedDisplaysKHR = fn Result(PhysicalDevice physicalDevice, uint planeIndex, uint* pDisplayCount, DisplayKHR* pDisplays);
alias ProcGetDrmDisplayEXT = fn Result(PhysicalDevice physicalDevice, int drmFd, uint connectorId, DisplayKHR* display);
alias ProcGetInstanceProcAddr = fn ProcVoidFunction(Instance instance, ZString pName);
alias ProcGetInstanceProcAddrLUNARG = fn ProcVoidFunction(Instance instance, ZString pName);
alias ProcGetPhysicalDeviceCalibrateableTimeDomainsEXT = fn Result(PhysicalDevice physicalDevice, uint* pTimeDomainCount, TimeDomainKHR* pTimeDomains);
alias ProcGetPhysicalDeviceCalibrateableTimeDomainsKHR = fn Result(PhysicalDevice physicalDevice, uint* pTimeDomainCount, TimeDomainKHR* pTimeDomains);
alias ProcGetPhysicalDeviceCooperativeMatrixFlexibleDimensionsPropertiesNV = fn Result(PhysicalDevice physicalDevice, uint* pPropertyCount, CooperativeMatrixFlexibleDimensionsPropertiesNV* pProperties);
alias ProcGetPhysicalDeviceCooperativeMatrixPropertiesKHR = fn Result(PhysicalDevice physicalDevice, uint* pPropertyCount, CooperativeMatrixPropertiesKHR* pProperties);
alias ProcGetPhysicalDeviceCooperativeMatrixPropertiesNV = fn Result(PhysicalDevice physicalDevice, uint* pPropertyCount, CooperativeMatrixPropertiesNV* pProperties);
alias ProcGetPhysicalDeviceCooperativeVectorPropertiesNV = fn Result(PhysicalDevice physicalDevice, uint* pPropertyCount, CooperativeVectorPropertiesNV* pProperties);
alias ProcGetPhysicalDeviceDisplayPlaneProperties2KHR = fn Result(PhysicalDevice physicalDevice, uint* pPropertyCount, DisplayPlaneProperties2KHR* pProperties);
alias ProcGetPhysicalDeviceDisplayPlanePropertiesKHR = fn Result(PhysicalDevice physicalDevice, uint* pPropertyCount, DisplayPlanePropertiesKHR* pProperties);
alias ProcGetPhysicalDeviceDisplayProperties2KHR = fn Result(PhysicalDevice physicalDevice, uint* pPropertyCount, DisplayProperties2KHR* pProperties);
alias ProcGetPhysicalDeviceDisplayPropertiesKHR = fn Result(PhysicalDevice physicalDevice, uint* pPropertyCount, DisplayPropertiesKHR* pProperties);
alias ProcGetPhysicalDeviceExternalBufferProperties = fn void(PhysicalDevice physicalDevice, PhysicalDeviceExternalBufferInfo* pExternalBufferInfo, ExternalBufferProperties* pExternalBufferProperties);
alias ProcGetPhysicalDeviceExternalBufferPropertiesKHR = fn void(PhysicalDevice physicalDevice, PhysicalDeviceExternalBufferInfo* pExternalBufferInfo, ExternalBufferProperties* pExternalBufferProperties);
alias ProcGetPhysicalDeviceExternalFenceProperties = fn void(PhysicalDevice physicalDevice, PhysicalDeviceExternalFenceInfo* pExternalFenceInfo, ExternalFenceProperties* pExternalFenceProperties);
alias ProcGetPhysicalDeviceExternalFencePropertiesKHR = fn void(PhysicalDevice physicalDevice, PhysicalDeviceExternalFenceInfo* pExternalFenceInfo, ExternalFenceProperties* pExternalFenceProperties);
alias ProcGetPhysicalDeviceExternalImageFormatPropertiesNV = fn Result(PhysicalDevice physicalDevice, Format format, ImageType type, ImageTiling tiling, ImageUsageFlags usage, ImageCreateFlags flags, ExternalMemoryHandleTypeFlagsNV externalHandleType, ExternalImageFormatPropertiesNV* pExternalImageFormatProperties);
alias ProcGetPhysicalDeviceExternalSemaphoreProperties = fn void(PhysicalDevice physicalDevice, PhysicalDeviceExternalSemaphoreInfo* pExternalSemaphoreInfo, ExternalSemaphoreProperties* pExternalSemaphoreProperties);
alias ProcGetPhysicalDeviceExternalSemaphorePropertiesKHR = fn void(PhysicalDevice physicalDevice, PhysicalDeviceExternalSemaphoreInfo* pExternalSemaphoreInfo, ExternalSemaphoreProperties* pExternalSemaphoreProperties);
alias ProcGetPhysicalDeviceFeatures = fn void(PhysicalDevice physicalDevice, PhysicalDeviceFeatures* pFeatures);
alias ProcGetPhysicalDeviceFeatures2 = fn void(PhysicalDevice physicalDevice, PhysicalDeviceFeatures2* pFeatures);
alias ProcGetPhysicalDeviceFeatures2KHR = fn void(PhysicalDevice physicalDevice, PhysicalDeviceFeatures2* pFeatures);
alias ProcGetPhysicalDeviceFormatProperties = fn void(PhysicalDevice physicalDevice, Format format, FormatProperties* pFormatProperties);
alias ProcGetPhysicalDeviceFormatProperties2 = fn void(PhysicalDevice physicalDevice, Format format, FormatProperties2* pFormatProperties);
alias ProcGetPhysicalDeviceFormatProperties2KHR = fn void(PhysicalDevice physicalDevice, Format format, FormatProperties2* pFormatProperties);
alias ProcGetPhysicalDeviceFragmentShadingRatesKHR = fn Result(PhysicalDevice physicalDevice, uint* pFragmentShadingRateCount, PhysicalDeviceFragmentShadingRateKHR* pFragmentShadingRates);
alias ProcGetPhysicalDeviceImageFormatProperties = fn Result(PhysicalDevice physicalDevice, Format format, ImageType type, ImageTiling tiling, ImageUsageFlags usage, ImageCreateFlags flags, ImageFormatProperties* pImageFormatProperties);
alias ProcGetPhysicalDeviceImageFormatProperties2 = fn Result(PhysicalDevice physicalDevice, PhysicalDeviceImageFormatInfo2* pImageFormatInfo, ImageFormatProperties2* pImageFormatProperties);
alias ProcGetPhysicalDeviceImageFormatProperties2KHR = fn Result(PhysicalDevice physicalDevice, PhysicalDeviceImageFormatInfo2* pImageFormatInfo, ImageFormatProperties2* pImageFormatProperties);
alias ProcGetPhysicalDeviceMemoryProperties = fn void(PhysicalDevice physicalDevice, PhysicalDeviceMemoryProperties* pMemoryProperties);
alias ProcGetPhysicalDeviceMemoryProperties2 = fn void(PhysicalDevice physicalDevice, PhysicalDeviceMemoryProperties2* pMemoryProperties);
alias ProcGetPhysicalDeviceMemoryProperties2KHR = fn void(PhysicalDevice physicalDevice, PhysicalDeviceMemoryProperties2* pMemoryProperties);
alias ProcGetPhysicalDeviceMultisamplePropertiesEXT = fn void(PhysicalDevice physicalDevice, SampleCountFlags samples, MultisamplePropertiesEXT* pMultisampleProperties);
alias ProcGetPhysicalDeviceOpticalFlowImageFormatsNV = fn Result(PhysicalDevice physicalDevice, OpticalFlowImageFormatInfoNV* pOpticalFlowImageFormatInfo, uint* pFormatCount, OpticalFlowImageFormatPropertiesNV* pImageFormatProperties);
alias ProcGetPhysicalDevicePresentRectanglesKHR = fn Result(PhysicalDevice physicalDevice, SurfaceKHR surface, uint* pRectCount, Rect2D* pRects);
alias ProcGetPhysicalDeviceProperties = fn void(PhysicalDevice physicalDevice, PhysicalDeviceProperties* pProperties);
alias ProcGetPhysicalDeviceProperties2 = fn void(PhysicalDevice physicalDevice, PhysicalDeviceProperties2* pProperties);
alias ProcGetPhysicalDeviceProperties2KHR = fn void(PhysicalDevice physicalDevice, PhysicalDeviceProperties2* pProperties);
alias ProcGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR = fn void(PhysicalDevice physicalDevice, QueryPoolPerformanceCreateInfoKHR* pPerformanceQueryCreateInfo, uint* pNumPasses);
alias ProcGetPhysicalDeviceQueueFamilyProperties = fn void(PhysicalDevice physicalDevice, uint* pQueueFamilyPropertyCount, QueueFamilyProperties* pQueueFamilyProperties);
alias ProcGetPhysicalDeviceQueueFamilyProperties2 = fn void(PhysicalDevice physicalDevice, uint* pQueueFamilyPropertyCount, QueueFamilyProperties2* pQueueFamilyProperties);
alias ProcGetPhysicalDeviceQueueFamilyProperties2KHR = fn void(PhysicalDevice physicalDevice, uint* pQueueFamilyPropertyCount, QueueFamilyProperties2* pQueueFamilyProperties);
alias ProcGetPhysicalDeviceSparseImageFormatProperties = fn void(PhysicalDevice physicalDevice, Format format, ImageType type, SampleCountFlags samples, ImageUsageFlags usage, ImageTiling tiling, uint* pPropertyCount, SparseImageFormatProperties* pProperties);
alias ProcGetPhysicalDeviceSparseImageFormatProperties2 = fn void(PhysicalDevice physicalDevice, PhysicalDeviceSparseImageFormatInfo2* pFormatInfo, uint* pPropertyCount, SparseImageFormatProperties2* pProperties);
alias ProcGetPhysicalDeviceSparseImageFormatProperties2KHR = fn void(PhysicalDevice physicalDevice, PhysicalDeviceSparseImageFormatInfo2* pFormatInfo, uint* pPropertyCount, SparseImageFormatProperties2* pProperties);
alias ProcGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV = fn Result(PhysicalDevice physicalDevice, uint* pCombinationCount, FramebufferMixedSamplesCombinationNV* pCombinations);
alias ProcGetPhysicalDeviceSurfaceCapabilities2EXT = fn Result(PhysicalDevice physicalDevice, SurfaceKHR surface, SurfaceCapabilities2EXT* pSurfaceCapabilities);
alias ProcGetPhysicalDeviceSurfaceCapabilities2KHR = fn Result(PhysicalDevice physicalDevice, PhysicalDeviceSurfaceInfo2KHR* pSurfaceInfo, SurfaceCapabilities2KHR* pSurfaceCapabilities);
alias ProcGetPhysicalDeviceSurfaceCapabilitiesKHR = fn Result(PhysicalDevice physicalDevice, SurfaceKHR surface, SurfaceCapabilitiesKHR* pSurfaceCapabilities);
alias ProcGetPhysicalDeviceSurfaceFormats2KHR = fn Result(PhysicalDevice physicalDevice, PhysicalDeviceSurfaceInfo2KHR* pSurfaceInfo, uint* pSurfaceFormatCount, SurfaceFormat2KHR* pSurfaceFormats);
alias ProcGetPhysicalDeviceSurfaceFormatsKHR = fn Result(PhysicalDevice physicalDevice, SurfaceKHR surface, uint* pSurfaceFormatCount, SurfaceFormatKHR* pSurfaceFormats);
alias ProcGetPhysicalDeviceSurfacePresentModes2EXT = fn Result(PhysicalDevice physicalDevice, PhysicalDeviceSurfaceInfo2KHR* pSurfaceInfo, uint* pPresentModeCount, PresentModeKHR* pPresentModes);
alias ProcGetPhysicalDeviceSurfacePresentModesKHR = fn Result(PhysicalDevice physicalDevice, SurfaceKHR surface, uint* pPresentModeCount, PresentModeKHR* pPresentModes);
alias ProcGetPhysicalDeviceSurfaceSupportKHR = fn Result(PhysicalDevice physicalDevice, uint queueFamilyIndex, SurfaceKHR surface, uint* pSupported);
alias ProcGetPhysicalDeviceToolProperties = fn Result(PhysicalDevice physicalDevice, uint* pToolCount, PhysicalDeviceToolProperties* pToolProperties);
alias ProcGetPhysicalDeviceToolPropertiesEXT = fn Result(PhysicalDevice physicalDevice, uint* pToolCount, PhysicalDeviceToolProperties* pToolProperties);
alias ProcGetPhysicalDeviceVideoCapabilitiesKHR = fn Result(PhysicalDevice physicalDevice, VideoProfileInfoKHR* pVideoProfile, VideoCapabilitiesKHR* pCapabilities);
alias ProcGetPhysicalDeviceVideoEncodeQualityLevelPropertiesKHR = fn Result(PhysicalDevice physicalDevice, PhysicalDeviceVideoEncodeQualityLevelInfoKHR* pQualityLevelInfo, VideoEncodeQualityLevelPropertiesKHR* pQualityLevelProperties);
alias ProcGetPhysicalDeviceVideoFormatPropertiesKHR = fn Result(PhysicalDevice physicalDevice, PhysicalDeviceVideoFormatInfoKHR* pVideoFormatInfo, uint* pVideoFormatPropertyCount, VideoFormatPropertiesKHR* pVideoFormatProperties);
alias ProcGetPhysicalDeviceWaylandPresentationSupportKHR = fn uint(PhysicalDevice physicalDevice, uint queueFamilyIndex, WLDisplay* display);
alias ProcGetPhysicalDeviceWin32PresentationSupportKHR = fn uint(PhysicalDevice physicalDevice, uint queueFamilyIndex);
alias ProcGetPhysicalDeviceXcbPresentationSupportKHR = fn uint(PhysicalDevice physicalDevice, uint queueFamilyIndex, XCBConnection* connection, XCBVisualID visual_id);
alias ProcGetPhysicalDeviceXlibPresentationSupportKHR = fn uint(PhysicalDevice physicalDevice, uint queueFamilyIndex, XlibDisplay* dpy, XlibVisualID visualID);
alias ProcGetWinrtDisplayNV = fn Result(PhysicalDevice physicalDevice, uint deviceRelativeId, DisplayKHR* pDisplay);
alias ProcReleaseDisplayEXT = fn Result(PhysicalDevice physicalDevice, DisplayKHR display);
alias ProcSubmitDebugUtilsMessageEXT = fn void(Instance instance, DebugUtilsMessageSeverityFlagsEXT messageSeverity, DebugUtilsMessageTypeFlagsEXT messageTypes, DebugUtilsMessengerCallbackDataEXT* pCallbackData);

// Device Procedure Types
alias ProcAcquireFullScreenExclusiveModeEXT = fn Result(Device device, SwapchainKHR swapchain);
alias ProcAcquireNextImage2KHR = fn Result(Device device, AcquireNextImageInfoKHR* pAcquireInfo, uint* pImageIndex);
alias ProcAcquireNextImageKHR = fn Result(Device device, SwapchainKHR swapchain, ulong timeout, Semaphore semaphore, Fence fence, uint* pImageIndex);
alias ProcAcquirePerformanceConfigurationINTEL = fn Result(Device device, PerformanceConfigurationAcquireInfoINTEL* pAcquireInfo, PerformanceConfigurationINTEL* pConfiguration);
alias ProcAcquireProfilingLockKHR = fn Result(Device device, AcquireProfilingLockInfoKHR* pInfo);
alias ProcAllocateCommandBuffers = fn Result(Device device, CommandBufferAllocateInfo* pAllocateInfo, CommandBuffer* pCommandBuffers);
alias ProcAllocateDescriptorSets = fn Result(Device device, DescriptorSetAllocateInfo* pAllocateInfo, DescriptorSet* pDescriptorSets);
alias ProcAllocateMemory = fn Result(Device device, MemoryAllocateInfo* pAllocateInfo, AllocationCallbacks* pAllocator, DeviceMemory* pMemory);
alias ProcAntiLagUpdateAMD = fn void(Device device, AntiLagDataAMD* pData);
alias ProcBeginCommandBuffer = fn Result(CommandBuffer commandBuffer, CommandBufferBeginInfo* pBeginInfo);
alias ProcBindAccelerationStructureMemoryNV = fn Result(Device device, uint bindInfoCount, BindAccelerationStructureMemoryInfoNV* pBindInfos);
alias ProcBindBufferMemory = fn Result(Device device, Buffer buffer, DeviceMemory memory, DeviceSize memoryOffset);
alias ProcBindBufferMemory2 = fn Result(Device device, uint bindInfoCount, BindBufferMemoryInfo* pBindInfos);
alias ProcBindBufferMemory2KHR = fn Result(Device device, uint bindInfoCount, BindBufferMemoryInfo* pBindInfos);
alias ProcBindImageMemory = fn Result(Device device, Image image, DeviceMemory memory, DeviceSize memoryOffset);
alias ProcBindImageMemory2 = fn Result(Device device, uint bindInfoCount, BindImageMemoryInfo* pBindInfos);
alias ProcBindImageMemory2KHR = fn Result(Device device, uint bindInfoCount, BindImageMemoryInfo* pBindInfos);
alias ProcBindOpticalFlowSessionImageNV = fn Result(Device device, OpticalFlowSessionNV session, OpticalFlowSessionBindingPointNV bindingPoint, ImageView view, ImageLayout layout);
alias ProcBindVideoSessionMemoryKHR = fn Result(Device device, VideoSessionKHR videoSession, uint bindSessionMemoryInfoCount, BindVideoSessionMemoryInfoKHR* pBindSessionMemoryInfos);
alias ProcBuildAccelerationStructuresKHR = fn Result(Device device, DeferredOperationKHR deferredOperation, uint infoCount, AccelerationStructureBuildGeometryInfoKHR* pInfos, AccelerationStructureBuildRangeInfoKHR** ppBuildRangeInfos);
alias ProcBuildMicromapsEXT = fn Result(Device device, DeferredOperationKHR deferredOperation, uint infoCount, MicromapBuildInfoEXT* pInfos);
alias ProcCmdBeginConditionalRenderingEXT = fn void(CommandBuffer commandBuffer, ConditionalRenderingBeginInfoEXT* pConditionalRenderingBegin);
alias ProcCmdBeginDebugUtilsLabelEXT = fn void(CommandBuffer commandBuffer, DebugUtilsLabelEXT* pLabelInfo);
alias ProcCmdBeginQuery = fn void(CommandBuffer commandBuffer, QueryPool queryPool, uint query, QueryControlFlags flags);
alias ProcCmdBeginQueryIndexedEXT = fn void(CommandBuffer commandBuffer, QueryPool queryPool, uint query, QueryControlFlags flags, uint index);
alias ProcCmdBeginRenderPass = fn void(CommandBuffer commandBuffer, RenderPassBeginInfo* pRenderPassBegin, SubpassContents contents);
alias ProcCmdBeginRenderPass2 = fn void(CommandBuffer commandBuffer, RenderPassBeginInfo* pRenderPassBegin, SubpassBeginInfo* pSubpassBeginInfo);
alias ProcCmdBeginRenderPass2KHR = fn void(CommandBuffer commandBuffer, RenderPassBeginInfo* pRenderPassBegin, SubpassBeginInfo* pSubpassBeginInfo);
alias ProcCmdBeginRendering = fn void(CommandBuffer commandBuffer, RenderingInfo* pRenderingInfo);
alias ProcCmdBeginRenderingKHR = fn void(CommandBuffer commandBuffer, RenderingInfo* pRenderingInfo);
alias ProcCmdBeginTransformFeedbackEXT = fn void(CommandBuffer commandBuffer, uint firstCounterBuffer, uint counterBufferCount, Buffer* pCounterBuffers, DeviceSize* pCounterBufferOffsets);
alias ProcCmdBeginVideoCodingKHR = fn void(CommandBuffer commandBuffer, VideoBeginCodingInfoKHR* pBeginInfo);
alias ProcCmdBindDescriptorBufferEmbeddedSamplers2EXT = fn void(CommandBuffer commandBuffer, BindDescriptorBufferEmbeddedSamplersInfoEXT* pBindDescriptorBufferEmbeddedSamplersInfo);
alias ProcCmdBindDescriptorBufferEmbeddedSamplersEXT = fn void(CommandBuffer commandBuffer, PipelineBindPoint pipelineBindPoint, PipelineLayout layout, uint set);
alias ProcCmdBindDescriptorBuffersEXT = fn void(CommandBuffer commandBuffer, uint bufferCount, DescriptorBufferBindingInfoEXT* pBindingInfos);
alias ProcCmdBindDescriptorSets = fn void(CommandBuffer commandBuffer, PipelineBindPoint pipelineBindPoint, PipelineLayout layout, uint firstSet, uint descriptorSetCount, DescriptorSet* pDescriptorSets, uint dynamicOffsetCount, uint* pDynamicOffsets);
alias ProcCmdBindDescriptorSets2 = fn void(CommandBuffer commandBuffer, BindDescriptorSetsInfo* pBindDescriptorSetsInfo);
alias ProcCmdBindDescriptorSets2KHR = fn void(CommandBuffer commandBuffer, BindDescriptorSetsInfo* pBindDescriptorSetsInfo);
alias ProcCmdBindIndexBuffer = fn void(CommandBuffer commandBuffer, Buffer buffer, DeviceSize offset, IndexType indexType);
alias ProcCmdBindIndexBuffer2 = fn void(CommandBuffer commandBuffer, Buffer buffer, DeviceSize offset, DeviceSize size, IndexType indexType);
alias ProcCmdBindIndexBuffer2KHR = fn void(CommandBuffer commandBuffer, Buffer buffer, DeviceSize offset, DeviceSize size, IndexType indexType);
alias ProcCmdBindInvocationMaskHUAWEI = fn void(CommandBuffer commandBuffer, ImageView imageView, ImageLayout imageLayout);
alias ProcCmdBindPipeline = fn void(CommandBuffer commandBuffer, PipelineBindPoint pipelineBindPoint, Pipeline pipeline);
alias ProcCmdBindPipelineShaderGroupNV = fn void(CommandBuffer commandBuffer, PipelineBindPoint pipelineBindPoint, Pipeline pipeline, uint groupIndex);
alias ProcCmdBindShadersEXT = fn void(CommandBuffer commandBuffer, uint stageCount, ShaderStageFlags* pStages, ShaderEXT* pShaders);
alias ProcCmdBindShadingRateImageNV = fn void(CommandBuffer commandBuffer, ImageView imageView, ImageLayout imageLayout);
alias ProcCmdBindTransformFeedbackBuffersEXT = fn void(CommandBuffer commandBuffer, uint firstBinding, uint bindingCount, Buffer* pBuffers, DeviceSize* pOffsets, DeviceSize* pSizes);
alias ProcCmdBindVertexBuffers = fn void(CommandBuffer commandBuffer, uint firstBinding, uint bindingCount, Buffer* pBuffers, DeviceSize* pOffsets);
alias ProcCmdBindVertexBuffers2 = fn void(CommandBuffer commandBuffer, uint firstBinding, uint bindingCount, Buffer* pBuffers, DeviceSize* pOffsets, DeviceSize* pSizes, DeviceSize* pStrides);
alias ProcCmdBindVertexBuffers2EXT = fn void(CommandBuffer commandBuffer, uint firstBinding, uint bindingCount, Buffer* pBuffers, DeviceSize* pOffsets, DeviceSize* pSizes, DeviceSize* pStrides);
alias ProcCmdBlitImage = fn void(CommandBuffer commandBuffer, Image srcImage, ImageLayout srcImageLayout, Image dstImage, ImageLayout dstImageLayout, uint regionCount, ImageBlit* pRegions, Filter filter);
alias ProcCmdBlitImage2 = fn void(CommandBuffer commandBuffer, BlitImageInfo2* pBlitImageInfo);
alias ProcCmdBlitImage2KHR = fn void(CommandBuffer commandBuffer, BlitImageInfo2* pBlitImageInfo);
alias ProcCmdBuildAccelerationStructureNV = fn void(CommandBuffer commandBuffer, AccelerationStructureInfoNV* pInfo, Buffer instanceData, DeviceSize instanceOffset, uint update, AccelerationStructureNV dst, AccelerationStructureNV src, Buffer scratch, DeviceSize scratchOffset);
alias ProcCmdBuildAccelerationStructuresIndirectKHR = fn void(CommandBuffer commandBuffer, uint infoCount, AccelerationStructureBuildGeometryInfoKHR* pInfos, DeviceAddress* pIndirectDeviceAddresses, uint* pIndirectStrides, uint*[] ppMaxPrimitiveCounts);
alias ProcCmdBuildAccelerationStructuresKHR = fn void(CommandBuffer commandBuffer, uint infoCount, AccelerationStructureBuildGeometryInfoKHR* pInfos, AccelerationStructureBuildRangeInfoKHR** ppBuildRangeInfos);
alias ProcCmdBuildClusterAccelerationStructureIndirectNV = fn void(CommandBuffer commandBuffer, ClusterAccelerationStructureCommandsInfoNV* pCommandInfos);
alias ProcCmdBuildMicromapsEXT = fn void(CommandBuffer commandBuffer, uint infoCount, MicromapBuildInfoEXT* pInfos);
alias ProcCmdBuildPartitionedAccelerationStructuresNV = fn void(CommandBuffer commandBuffer, BuildPartitionedAccelerationStructureInfoNV* pBuildInfo);
alias ProcCmdClearAttachments = fn void(CommandBuffer commandBuffer, uint attachmentCount, ClearAttachment* pAttachments, uint rectCount, ClearRect* pRects);
alias ProcCmdClearColorImage = fn void(CommandBuffer commandBuffer, Image image, ImageLayout imageLayout, ClearColorValue* pColor, uint rangeCount, ImageSubresourceRange* pRanges);
alias ProcCmdClearDepthStencilImage = fn void(CommandBuffer commandBuffer, Image image, ImageLayout imageLayout, ClearDepthStencilValue* pDepthStencil, uint rangeCount, ImageSubresourceRange* pRanges);
alias ProcCmdControlVideoCodingKHR = fn void(CommandBuffer commandBuffer, VideoCodingControlInfoKHR* pCodingControlInfo);
alias ProcCmdConvertCooperativeVectorMatrixNV = fn void(CommandBuffer commandBuffer, uint infoCount, ConvertCooperativeVectorMatrixInfoNV* pInfos);
alias ProcCmdCopyAccelerationStructureKHR = fn void(CommandBuffer commandBuffer, CopyAccelerationStructureInfoKHR* pInfo);
alias ProcCmdCopyAccelerationStructureNV = fn void(CommandBuffer commandBuffer, AccelerationStructureNV dst, AccelerationStructureNV src, CopyAccelerationStructureModeKHR mode);
alias ProcCmdCopyAccelerationStructureToMemoryKHR = fn void(CommandBuffer commandBuffer, CopyAccelerationStructureToMemoryInfoKHR* pInfo);
alias ProcCmdCopyBuffer = fn void(CommandBuffer commandBuffer, Buffer srcBuffer, Buffer dstBuffer, uint regionCount, BufferCopy* pRegions);
alias ProcCmdCopyBuffer2 = fn void(CommandBuffer commandBuffer, CopyBufferInfo2* pCopyBufferInfo);
alias ProcCmdCopyBuffer2KHR = fn void(CommandBuffer commandBuffer, CopyBufferInfo2* pCopyBufferInfo);
alias ProcCmdCopyBufferToImage = fn void(CommandBuffer commandBuffer, Buffer srcBuffer, Image dstImage, ImageLayout dstImageLayout, uint regionCount, BufferImageCopy* pRegions);
alias ProcCmdCopyBufferToImage2 = fn void(CommandBuffer commandBuffer, CopyBufferToImageInfo2* pCopyBufferToImageInfo);
alias ProcCmdCopyBufferToImage2KHR = fn void(CommandBuffer commandBuffer, CopyBufferToImageInfo2* pCopyBufferToImageInfo);
alias ProcCmdCopyImage = fn void(CommandBuffer commandBuffer, Image srcImage, ImageLayout srcImageLayout, Image dstImage, ImageLayout dstImageLayout, uint regionCount, ImageCopy* pRegions);
alias ProcCmdCopyImage2 = fn void(CommandBuffer commandBuffer, CopyImageInfo2* pCopyImageInfo);
alias ProcCmdCopyImage2KHR = fn void(CommandBuffer commandBuffer, CopyImageInfo2* pCopyImageInfo);
alias ProcCmdCopyImageToBuffer = fn void(CommandBuffer commandBuffer, Image srcImage, ImageLayout srcImageLayout, Buffer dstBuffer, uint regionCount, BufferImageCopy* pRegions);
alias ProcCmdCopyImageToBuffer2 = fn void(CommandBuffer commandBuffer, CopyImageToBufferInfo2* pCopyImageToBufferInfo);
alias ProcCmdCopyImageToBuffer2KHR = fn void(CommandBuffer commandBuffer, CopyImageToBufferInfo2* pCopyImageToBufferInfo);
alias ProcCmdCopyMemoryIndirectNV = fn void(CommandBuffer commandBuffer, DeviceAddress copyBufferAddress, uint copyCount, uint stride);
alias ProcCmdCopyMemoryToAccelerationStructureKHR = fn void(CommandBuffer commandBuffer, CopyMemoryToAccelerationStructureInfoKHR* pInfo);
alias ProcCmdCopyMemoryToImageIndirectNV = fn void(CommandBuffer commandBuffer, DeviceAddress copyBufferAddress, uint copyCount, uint stride, Image dstImage, ImageLayout dstImageLayout, ImageSubresourceLayers* pImageSubresources);
alias ProcCmdCopyMemoryToMicromapEXT = fn void(CommandBuffer commandBuffer, CopyMemoryToMicromapInfoEXT* pInfo);
alias ProcCmdCopyMicromapEXT = fn void(CommandBuffer commandBuffer, CopyMicromapInfoEXT* pInfo);
alias ProcCmdCopyMicromapToMemoryEXT = fn void(CommandBuffer commandBuffer, CopyMicromapToMemoryInfoEXT* pInfo);
alias ProcCmdCopyQueryPoolResults = fn void(CommandBuffer commandBuffer, QueryPool queryPool, uint firstQuery, uint queryCount, Buffer dstBuffer, DeviceSize dstOffset, DeviceSize stride, QueryResultFlags flags);
alias ProcCmdCuLaunchKernelNVX = fn void(CommandBuffer commandBuffer, CuLaunchInfoNVX* pLaunchInfo);
alias ProcCmdCudaLaunchKernelNV = fn void(CommandBuffer commandBuffer, CudaLaunchInfoNV* pLaunchInfo);
alias ProcCmdDebugMarkerBeginEXT = fn void(CommandBuffer commandBuffer, DebugMarkerMarkerInfoEXT* pMarkerInfo);
alias ProcCmdDebugMarkerEndEXT = fn void(CommandBuffer commandBuffer);
alias ProcCmdDebugMarkerInsertEXT = fn void(CommandBuffer commandBuffer, DebugMarkerMarkerInfoEXT* pMarkerInfo);
alias ProcCmdDecodeVideoKHR = fn void(CommandBuffer commandBuffer, VideoDecodeInfoKHR* pDecodeInfo);
alias ProcCmdDecompressMemoryIndirectCountNV = fn void(CommandBuffer commandBuffer, DeviceAddress indirectCommandsAddress, DeviceAddress indirectCommandsCountAddress, uint stride);
alias ProcCmdDecompressMemoryNV = fn void(CommandBuffer commandBuffer, uint decompressRegionCount, DecompressMemoryRegionNV* pDecompressMemoryRegions);
alias ProcCmdDispatch = fn void(CommandBuffer commandBuffer, uint groupCountX, uint groupCountY, uint groupCountZ);
alias ProcCmdDispatchBase = fn void(CommandBuffer commandBuffer, uint baseGroupX, uint baseGroupY, uint baseGroupZ, uint groupCountX, uint groupCountY, uint groupCountZ);
alias ProcCmdDispatchBaseKHR = fn void(CommandBuffer commandBuffer, uint baseGroupX, uint baseGroupY, uint baseGroupZ, uint groupCountX, uint groupCountY, uint groupCountZ);
alias ProcCmdDispatchIndirect = fn void(CommandBuffer commandBuffer, Buffer buffer, DeviceSize offset);
alias ProcCmdDraw = fn void(CommandBuffer commandBuffer, uint vertexCount, uint instanceCount, uint firstVertex, uint firstInstance);
alias ProcCmdDrawClusterHUAWEI = fn void(CommandBuffer commandBuffer, uint groupCountX, uint groupCountY, uint groupCountZ);
alias ProcCmdDrawClusterIndirectHUAWEI = fn void(CommandBuffer commandBuffer, Buffer buffer, DeviceSize offset);
alias ProcCmdDrawIndexed = fn void(CommandBuffer commandBuffer, uint indexCount, uint instanceCount, uint firstIndex, int vertexOffset, uint firstInstance);
alias ProcCmdDrawIndexedIndirect = fn void(CommandBuffer commandBuffer, Buffer buffer, DeviceSize offset, uint drawCount, uint stride);
alias ProcCmdDrawIndexedIndirectCount = fn void(CommandBuffer commandBuffer, Buffer buffer, DeviceSize offset, Buffer countBuffer, DeviceSize countBufferOffset, uint maxDrawCount, uint stride);
alias ProcCmdDrawIndexedIndirectCountAMD = fn void(CommandBuffer commandBuffer, Buffer buffer, DeviceSize offset, Buffer countBuffer, DeviceSize countBufferOffset, uint maxDrawCount, uint stride);
alias ProcCmdDrawIndexedIndirectCountKHR = fn void(CommandBuffer commandBuffer, Buffer buffer, DeviceSize offset, Buffer countBuffer, DeviceSize countBufferOffset, uint maxDrawCount, uint stride);
alias ProcCmdDrawIndirect = fn void(CommandBuffer commandBuffer, Buffer buffer, DeviceSize offset, uint drawCount, uint stride);
alias ProcCmdDrawIndirectByteCountEXT = fn void(CommandBuffer commandBuffer, uint instanceCount, uint firstInstance, Buffer counterBuffer, DeviceSize counterBufferOffset, uint counterOffset, uint vertexStride);
alias ProcCmdDrawIndirectCount = fn void(CommandBuffer commandBuffer, Buffer buffer, DeviceSize offset, Buffer countBuffer, DeviceSize countBufferOffset, uint maxDrawCount, uint stride);
alias ProcCmdDrawIndirectCountAMD = fn void(CommandBuffer commandBuffer, Buffer buffer, DeviceSize offset, Buffer countBuffer, DeviceSize countBufferOffset, uint maxDrawCount, uint stride);
alias ProcCmdDrawIndirectCountKHR = fn void(CommandBuffer commandBuffer, Buffer buffer, DeviceSize offset, Buffer countBuffer, DeviceSize countBufferOffset, uint maxDrawCount, uint stride);
alias ProcCmdDrawMeshTasksEXT = fn void(CommandBuffer commandBuffer, uint groupCountX, uint groupCountY, uint groupCountZ);
alias ProcCmdDrawMeshTasksIndirectCountEXT = fn void(CommandBuffer commandBuffer, Buffer buffer, DeviceSize offset, Buffer countBuffer, DeviceSize countBufferOffset, uint maxDrawCount, uint stride);
alias ProcCmdDrawMeshTasksIndirectCountNV = fn void(CommandBuffer commandBuffer, Buffer buffer, DeviceSize offset, Buffer countBuffer, DeviceSize countBufferOffset, uint maxDrawCount, uint stride);
alias ProcCmdDrawMeshTasksIndirectEXT = fn void(CommandBuffer commandBuffer, Buffer buffer, DeviceSize offset, uint drawCount, uint stride);
alias ProcCmdDrawMeshTasksIndirectNV = fn void(CommandBuffer commandBuffer, Buffer buffer, DeviceSize offset, uint drawCount, uint stride);
alias ProcCmdDrawMeshTasksNV = fn void(CommandBuffer commandBuffer, uint taskCount, uint firstTask);
alias ProcCmdDrawMultiEXT = fn void(CommandBuffer commandBuffer, uint drawCount, MultiDrawInfoEXT* pVertexInfo, uint instanceCount, uint firstInstance, uint stride);
alias ProcCmdDrawMultiIndexedEXT = fn void(CommandBuffer commandBuffer, uint drawCount, MultiDrawIndexedInfoEXT* pIndexInfo, uint instanceCount, uint firstInstance, uint stride, int* pVertexOffset);
alias ProcCmdEncodeVideoKHR = fn void(CommandBuffer commandBuffer, VideoEncodeInfoKHR* pEncodeInfo);
alias ProcCmdEndConditionalRenderingEXT = fn void(CommandBuffer commandBuffer);
alias ProcCmdEndDebugUtilsLabelEXT = fn void(CommandBuffer commandBuffer);
alias ProcCmdEndQuery = fn void(CommandBuffer commandBuffer, QueryPool queryPool, uint query);
alias ProcCmdEndQueryIndexedEXT = fn void(CommandBuffer commandBuffer, QueryPool queryPool, uint query, uint index);
alias ProcCmdEndRenderPass = fn void(CommandBuffer commandBuffer);
alias ProcCmdEndRenderPass2 = fn void(CommandBuffer commandBuffer, SubpassEndInfo* pSubpassEndInfo);
alias ProcCmdEndRenderPass2KHR = fn void(CommandBuffer commandBuffer, SubpassEndInfo* pSubpassEndInfo);
alias ProcCmdEndRendering = fn void(CommandBuffer commandBuffer);
alias ProcCmdEndRenderingKHR = fn void(CommandBuffer commandBuffer);
alias ProcCmdEndTransformFeedbackEXT = fn void(CommandBuffer commandBuffer, uint firstCounterBuffer, uint counterBufferCount, Buffer* pCounterBuffers, DeviceSize* pCounterBufferOffsets);
alias ProcCmdEndVideoCodingKHR = fn void(CommandBuffer commandBuffer, VideoEndCodingInfoKHR* pEndCodingInfo);
alias ProcCmdExecuteCommands = fn void(CommandBuffer commandBuffer, uint commandBufferCount, CommandBuffer* pCommandBuffers);
alias ProcCmdExecuteGeneratedCommandsEXT = fn void(CommandBuffer commandBuffer, uint isPreprocessed, GeneratedCommandsInfoEXT* pGeneratedCommandsInfo);
alias ProcCmdExecuteGeneratedCommandsNV = fn void(CommandBuffer commandBuffer, uint isPreprocessed, GeneratedCommandsInfoNV* pGeneratedCommandsInfo);
alias ProcCmdFillBuffer = fn void(CommandBuffer commandBuffer, Buffer dstBuffer, DeviceSize dstOffset, DeviceSize size, uint data);
alias ProcCmdInsertDebugUtilsLabelEXT = fn void(CommandBuffer commandBuffer, DebugUtilsLabelEXT* pLabelInfo);
alias ProcCmdNextSubpass = fn void(CommandBuffer commandBuffer, SubpassContents contents);
alias ProcCmdNextSubpass2 = fn void(CommandBuffer commandBuffer, SubpassBeginInfo* pSubpassBeginInfo, SubpassEndInfo* pSubpassEndInfo);
alias ProcCmdNextSubpass2KHR = fn void(CommandBuffer commandBuffer, SubpassBeginInfo* pSubpassBeginInfo, SubpassEndInfo* pSubpassEndInfo);
alias ProcCmdOpticalFlowExecuteNV = fn void(CommandBuffer commandBuffer, OpticalFlowSessionNV session, OpticalFlowExecuteInfoNV* pExecuteInfo);
alias ProcCmdPipelineBarrier = fn void(CommandBuffer commandBuffer, PipelineStageFlags srcStageMask, PipelineStageFlags dstStageMask, DependencyFlags dependencyFlags, uint memoryBarrierCount, MemoryBarrier* pMemoryBarriers, uint bufferMemoryBarrierCount, BufferMemoryBarrier* pBufferMemoryBarriers, uint imageMemoryBarrierCount, ImageMemoryBarrier* pImageMemoryBarriers);
alias ProcCmdPipelineBarrier2 = fn void(CommandBuffer commandBuffer, DependencyInfo* pDependencyInfo);
alias ProcCmdPipelineBarrier2KHR = fn void(CommandBuffer commandBuffer, DependencyInfo* pDependencyInfo);
alias ProcCmdPreprocessGeneratedCommandsEXT = fn void(CommandBuffer commandBuffer, GeneratedCommandsInfoEXT* pGeneratedCommandsInfo, CommandBuffer stateCommandBuffer);
alias ProcCmdPreprocessGeneratedCommandsNV = fn void(CommandBuffer commandBuffer, GeneratedCommandsInfoNV* pGeneratedCommandsInfo);
alias ProcCmdPushConstants = fn void(CommandBuffer commandBuffer, PipelineLayout layout, ShaderStageFlags stageFlags, uint offset, uint size, void* pValues);
alias ProcCmdPushConstants2 = fn void(CommandBuffer commandBuffer, PushConstantsInfo* pPushConstantsInfo);
alias ProcCmdPushConstants2KHR = fn void(CommandBuffer commandBuffer, PushConstantsInfo* pPushConstantsInfo);
alias ProcCmdPushDescriptorSet = fn void(CommandBuffer commandBuffer, PipelineBindPoint pipelineBindPoint, PipelineLayout layout, uint set, uint descriptorWriteCount, WriteDescriptorSet* pDescriptorWrites);
alias ProcCmdPushDescriptorSet2 = fn void(CommandBuffer commandBuffer, PushDescriptorSetInfo* pPushDescriptorSetInfo);
alias ProcCmdPushDescriptorSet2KHR = fn void(CommandBuffer commandBuffer, PushDescriptorSetInfo* pPushDescriptorSetInfo);
alias ProcCmdPushDescriptorSetKHR = fn void(CommandBuffer commandBuffer, PipelineBindPoint pipelineBindPoint, PipelineLayout layout, uint set, uint descriptorWriteCount, WriteDescriptorSet* pDescriptorWrites);
alias ProcCmdPushDescriptorSetWithTemplate = fn void(CommandBuffer commandBuffer, DescriptorUpdateTemplate descriptorUpdateTemplate, PipelineLayout layout, uint set, void* pData);
alias ProcCmdPushDescriptorSetWithTemplate2 = fn void(CommandBuffer commandBuffer, PushDescriptorSetWithTemplateInfo* pPushDescriptorSetWithTemplateInfo);
alias ProcCmdPushDescriptorSetWithTemplate2KHR = fn void(CommandBuffer commandBuffer, PushDescriptorSetWithTemplateInfo* pPushDescriptorSetWithTemplateInfo);
alias ProcCmdPushDescriptorSetWithTemplateKHR = fn void(CommandBuffer commandBuffer, DescriptorUpdateTemplate descriptorUpdateTemplate, PipelineLayout layout, uint set, void* pData);
alias ProcCmdResetEvent = fn void(CommandBuffer commandBuffer, Event event, PipelineStageFlags stageMask);
alias ProcCmdResetEvent2 = fn void(CommandBuffer commandBuffer, Event event, PipelineStageFlags2 stageMask);
alias ProcCmdResetEvent2KHR = fn void(CommandBuffer commandBuffer, Event event, PipelineStageFlags2 stageMask);
alias ProcCmdResetQueryPool = fn void(CommandBuffer commandBuffer, QueryPool queryPool, uint firstQuery, uint queryCount);
alias ProcCmdResolveImage = fn void(CommandBuffer commandBuffer, Image srcImage, ImageLayout srcImageLayout, Image dstImage, ImageLayout dstImageLayout, uint regionCount, ImageResolve* pRegions);
alias ProcCmdResolveImage2 = fn void(CommandBuffer commandBuffer, ResolveImageInfo2* pResolveImageInfo);
alias ProcCmdResolveImage2KHR = fn void(CommandBuffer commandBuffer, ResolveImageInfo2* pResolveImageInfo);
alias ProcCmdSetAlphaToCoverageEnableEXT = fn void(CommandBuffer commandBuffer, uint alphaToCoverageEnable);
alias ProcCmdSetAlphaToOneEnableEXT = fn void(CommandBuffer commandBuffer, uint alphaToOneEnable);
alias ProcCmdSetAttachmentFeedbackLoopEnableEXT = fn void(CommandBuffer commandBuffer, ImageAspectFlags aspectMask);
alias ProcCmdSetBlendConstants = fn void(CommandBuffer commandBuffer, float*[4] blendConstants);
alias ProcCmdSetCheckpointNV = fn void(CommandBuffer commandBuffer, void* pCheckpointMarker);
alias ProcCmdSetCoarseSampleOrderNV = fn void(CommandBuffer commandBuffer, CoarseSampleOrderTypeNV sampleOrderType, uint customSampleOrderCount, CoarseSampleOrderCustomNV* pCustomSampleOrders);
alias ProcCmdSetColorBlendAdvancedEXT = fn void(CommandBuffer commandBuffer, uint firstAttachment, uint attachmentCount, ColorBlendAdvancedEXT* pColorBlendAdvanced);
alias ProcCmdSetColorBlendEnableEXT = fn void(CommandBuffer commandBuffer, uint firstAttachment, uint attachmentCount, uint* pColorBlendEnables);
alias ProcCmdSetColorBlendEquationEXT = fn void(CommandBuffer commandBuffer, uint firstAttachment, uint attachmentCount, ColorBlendEquationEXT* pColorBlendEquations);
alias ProcCmdSetColorWriteMaskEXT = fn void(CommandBuffer commandBuffer, uint firstAttachment, uint attachmentCount, ColorComponentFlags* pColorWriteMasks);
alias ProcCmdSetConservativeRasterizationModeEXT = fn void(CommandBuffer commandBuffer, ConservativeRasterizationModeEXT conservativeRasterizationMode);
alias ProcCmdSetCoverageModulationModeNV = fn void(CommandBuffer commandBuffer, CoverageModulationModeNV coverageModulationMode);
alias ProcCmdSetCoverageModulationTableEnableNV = fn void(CommandBuffer commandBuffer, uint coverageModulationTableEnable);
alias ProcCmdSetCoverageModulationTableNV = fn void(CommandBuffer commandBuffer, uint coverageModulationTableCount, float* pCoverageModulationTable);
alias ProcCmdSetCoverageReductionModeNV = fn void(CommandBuffer commandBuffer, CoverageReductionModeNV coverageReductionMode);
alias ProcCmdSetCoverageToColorEnableNV = fn void(CommandBuffer commandBuffer, uint coverageToColorEnable);
alias ProcCmdSetCoverageToColorLocationNV = fn void(CommandBuffer commandBuffer, uint coverageToColorLocation);
alias ProcCmdSetCullMode = fn void(CommandBuffer commandBuffer, CullModeFlags cullMode);
alias ProcCmdSetCullModeEXT = fn void(CommandBuffer commandBuffer, CullModeFlags cullMode);
alias ProcCmdSetDepthBias = fn void(CommandBuffer commandBuffer, float depthBiasConstantFactor, float depthBiasClamp, float depthBiasSlopeFactor);
alias ProcCmdSetDepthBias2EXT = fn void(CommandBuffer commandBuffer, DepthBiasInfoEXT* pDepthBiasInfo);
alias ProcCmdSetDepthBiasEnable = fn void(CommandBuffer commandBuffer, uint depthBiasEnable);
alias ProcCmdSetDepthBiasEnableEXT = fn void(CommandBuffer commandBuffer, uint depthBiasEnable);
alias ProcCmdSetDepthBounds = fn void(CommandBuffer commandBuffer, float minDepthBounds, float maxDepthBounds);
alias ProcCmdSetDepthBoundsTestEnable = fn void(CommandBuffer commandBuffer, uint depthBoundsTestEnable);
alias ProcCmdSetDepthBoundsTestEnableEXT = fn void(CommandBuffer commandBuffer, uint depthBoundsTestEnable);
alias ProcCmdSetDepthClampEnableEXT = fn void(CommandBuffer commandBuffer, uint depthClampEnable);
alias ProcCmdSetDepthClampRangeEXT = fn void(CommandBuffer commandBuffer, DepthClampModeEXT depthClampMode, DepthClampRangeEXT* pDepthClampRange);
alias ProcCmdSetDepthClipEnableEXT = fn void(CommandBuffer commandBuffer, uint depthClipEnable);
alias ProcCmdSetDepthClipNegativeOneToOneEXT = fn void(CommandBuffer commandBuffer, uint negativeOneToOne);
alias ProcCmdSetDepthCompareOp = fn void(CommandBuffer commandBuffer, CompareOp depthCompareOp);
alias ProcCmdSetDepthCompareOpEXT = fn void(CommandBuffer commandBuffer, CompareOp depthCompareOp);
alias ProcCmdSetDepthTestEnable = fn void(CommandBuffer commandBuffer, uint depthTestEnable);
alias ProcCmdSetDepthTestEnableEXT = fn void(CommandBuffer commandBuffer, uint depthTestEnable);
alias ProcCmdSetDepthWriteEnable = fn void(CommandBuffer commandBuffer, uint depthWriteEnable);
alias ProcCmdSetDepthWriteEnableEXT = fn void(CommandBuffer commandBuffer, uint depthWriteEnable);
alias ProcCmdSetDescriptorBufferOffsets2EXT = fn void(CommandBuffer commandBuffer, SetDescriptorBufferOffsetsInfoEXT* pSetDescriptorBufferOffsetsInfo);
alias ProcCmdSetDescriptorBufferOffsetsEXT = fn void(CommandBuffer commandBuffer, PipelineBindPoint pipelineBindPoint, PipelineLayout layout, uint firstSet, uint setCount, uint* pBufferIndices, DeviceSize* pOffsets);
alias ProcCmdSetDeviceMask = fn void(CommandBuffer commandBuffer, uint deviceMask);
alias ProcCmdSetDeviceMaskKHR = fn void(CommandBuffer commandBuffer, uint deviceMask);
alias ProcCmdSetDiscardRectangleEXT = fn void(CommandBuffer commandBuffer, uint firstDiscardRectangle, uint discardRectangleCount, Rect2D* pDiscardRectangles);
alias ProcCmdSetDiscardRectangleEnableEXT = fn void(CommandBuffer commandBuffer, uint discardRectangleEnable);
alias ProcCmdSetDiscardRectangleModeEXT = fn void(CommandBuffer commandBuffer, DiscardRectangleModeEXT discardRectangleMode);
alias ProcCmdSetEvent = fn void(CommandBuffer commandBuffer, Event event, PipelineStageFlags stageMask);
alias ProcCmdSetEvent2 = fn void(CommandBuffer commandBuffer, Event event, DependencyInfo* pDependencyInfo);
alias ProcCmdSetEvent2KHR = fn void(CommandBuffer commandBuffer, Event event, DependencyInfo* pDependencyInfo);
alias ProcCmdSetExclusiveScissorEnableNV = fn void(CommandBuffer commandBuffer, uint firstExclusiveScissor, uint exclusiveScissorCount, uint* pExclusiveScissorEnables);
alias ProcCmdSetExclusiveScissorNV = fn void(CommandBuffer commandBuffer, uint firstExclusiveScissor, uint exclusiveScissorCount, Rect2D* pExclusiveScissors);
alias ProcCmdSetExtraPrimitiveOverestimationSizeEXT = fn void(CommandBuffer commandBuffer, float extraPrimitiveOverestimationSize);
alias ProcCmdSetFragmentShadingRateEnumNV = fn void(CommandBuffer commandBuffer, FragmentShadingRateNV shadingRate, FragmentShadingRateCombinerOpKHR*[2] combinerOps);
alias ProcCmdSetFragmentShadingRateKHR = fn void(CommandBuffer commandBuffer, Extent2D* pFragmentSize, FragmentShadingRateCombinerOpKHR*[2] combinerOps);
alias ProcCmdSetFrontFace = fn void(CommandBuffer commandBuffer, FrontFace frontFace);
alias ProcCmdSetFrontFaceEXT = fn void(CommandBuffer commandBuffer, FrontFace frontFace);
alias ProcCmdSetLineRasterizationModeEXT = fn void(CommandBuffer commandBuffer, LineRasterizationModeEXT lineRasterizationMode);
alias ProcCmdSetLineStipple = fn void(CommandBuffer commandBuffer, uint lineStippleFactor, ushort lineStipplePattern);
alias ProcCmdSetLineStippleEXT = fn void(CommandBuffer commandBuffer, uint lineStippleFactor, ushort lineStipplePattern);
alias ProcCmdSetLineStippleEnableEXT = fn void(CommandBuffer commandBuffer, uint stippledLineEnable);
alias ProcCmdSetLineStippleKHR = fn void(CommandBuffer commandBuffer, uint lineStippleFactor, ushort lineStipplePattern);
alias ProcCmdSetLineWidth = fn void(CommandBuffer commandBuffer, float lineWidth);
alias ProcCmdSetLogicOpEXT = fn void(CommandBuffer commandBuffer, LogicOp logicOp);
alias ProcCmdSetLogicOpEnableEXT = fn void(CommandBuffer commandBuffer, uint logicOpEnable);
alias ProcCmdSetPatchControlPointsEXT = fn void(CommandBuffer commandBuffer, uint patchControlPoints);
alias ProcCmdSetPerformanceMarkerINTEL = fn Result(CommandBuffer commandBuffer, PerformanceMarkerInfoINTEL* pMarkerInfo);
alias ProcCmdSetPerformanceOverrideINTEL = fn Result(CommandBuffer commandBuffer, PerformanceOverrideInfoINTEL* pOverrideInfo);
alias ProcCmdSetPerformanceStreamMarkerINTEL = fn Result(CommandBuffer commandBuffer, PerformanceStreamMarkerInfoINTEL* pMarkerInfo);
alias ProcCmdSetPolygonModeEXT = fn void(CommandBuffer commandBuffer, PolygonMode polygonMode);
alias ProcCmdSetPrimitiveRestartEnable = fn void(CommandBuffer commandBuffer, uint primitiveRestartEnable);
alias ProcCmdSetPrimitiveRestartEnableEXT = fn void(CommandBuffer commandBuffer, uint primitiveRestartEnable);
alias ProcCmdSetPrimitiveTopology = fn void(CommandBuffer commandBuffer, PrimitiveTopology primitiveTopology);
alias ProcCmdSetPrimitiveTopologyEXT = fn void(CommandBuffer commandBuffer, PrimitiveTopology primitiveTopology);
alias ProcCmdSetProvokingVertexModeEXT = fn void(CommandBuffer commandBuffer, ProvokingVertexModeEXT provokingVertexMode);
alias ProcCmdSetRasterizationSamplesEXT = fn void(CommandBuffer commandBuffer, SampleCountFlags rasterizationSamples);
alias ProcCmdSetRasterizationStreamEXT = fn void(CommandBuffer commandBuffer, uint rasterizationStream);
alias ProcCmdSetRasterizerDiscardEnable = fn void(CommandBuffer commandBuffer, uint rasterizerDiscardEnable);
alias ProcCmdSetRasterizerDiscardEnableEXT = fn void(CommandBuffer commandBuffer, uint rasterizerDiscardEnable);
alias ProcCmdSetRayTracingPipelineStackSizeKHR = fn void(CommandBuffer commandBuffer, uint pipelineStackSize);
alias ProcCmdSetRenderingAttachmentLocations = fn void(CommandBuffer commandBuffer, RenderingAttachmentLocationInfo* pLocationInfo);
alias ProcCmdSetRenderingAttachmentLocationsKHR = fn void(CommandBuffer commandBuffer, RenderingAttachmentLocationInfo* pLocationInfo);
alias ProcCmdSetRenderingInputAttachmentIndices = fn void(CommandBuffer commandBuffer, RenderingInputAttachmentIndexInfo* pInputAttachmentIndexInfo);
alias ProcCmdSetRenderingInputAttachmentIndicesKHR = fn void(CommandBuffer commandBuffer, RenderingInputAttachmentIndexInfo* pInputAttachmentIndexInfo);
alias ProcCmdSetRepresentativeFragmentTestEnableNV = fn void(CommandBuffer commandBuffer, uint representativeFragmentTestEnable);
alias ProcCmdSetSampleLocationsEXT = fn void(CommandBuffer commandBuffer, SampleLocationsInfoEXT* pSampleLocationsInfo);
alias ProcCmdSetSampleLocationsEnableEXT = fn void(CommandBuffer commandBuffer, uint sampleLocationsEnable);
alias ProcCmdSetSampleMaskEXT = fn void(CommandBuffer commandBuffer, SampleCountFlags samples, SampleMask* pSampleMask);
alias ProcCmdSetScissor = fn void(CommandBuffer commandBuffer, uint firstScissor, uint scissorCount, Rect2D* pScissors);
alias ProcCmdSetScissorWithCount = fn void(CommandBuffer commandBuffer, uint scissorCount, Rect2D* pScissors);
alias ProcCmdSetScissorWithCountEXT = fn void(CommandBuffer commandBuffer, uint scissorCount, Rect2D* pScissors);
alias ProcCmdSetShadingRateImageEnableNV = fn void(CommandBuffer commandBuffer, uint shadingRateImageEnable);
alias ProcCmdSetStencilCompareMask = fn void(CommandBuffer commandBuffer, StencilFaceFlags faceMask, uint compareMask);
alias ProcCmdSetStencilOp = fn void(CommandBuffer commandBuffer, StencilFaceFlags faceMask, StencilOp failOp, StencilOp passOp, StencilOp depthFailOp, CompareOp compareOp);
alias ProcCmdSetStencilOpEXT = fn void(CommandBuffer commandBuffer, StencilFaceFlags faceMask, StencilOp failOp, StencilOp passOp, StencilOp depthFailOp, CompareOp compareOp);
alias ProcCmdSetStencilReference = fn void(CommandBuffer commandBuffer, StencilFaceFlags faceMask, uint reference);
alias ProcCmdSetStencilTestEnable = fn void(CommandBuffer commandBuffer, uint stencilTestEnable);
alias ProcCmdSetStencilTestEnableEXT = fn void(CommandBuffer commandBuffer, uint stencilTestEnable);
alias ProcCmdSetStencilWriteMask = fn void(CommandBuffer commandBuffer, StencilFaceFlags faceMask, uint writeMask);
alias ProcCmdSetTessellationDomainOriginEXT = fn void(CommandBuffer commandBuffer, TessellationDomainOrigin domainOrigin);
alias ProcCmdSetVertexInputEXT = fn void(CommandBuffer commandBuffer, uint vertexBindingDescriptionCount, VertexInputBindingDescription2EXT* pVertexBindingDescriptions, uint vertexAttributeDescriptionCount, VertexInputAttributeDescription2EXT* pVertexAttributeDescriptions);
alias ProcCmdSetViewport = fn void(CommandBuffer commandBuffer, uint firstViewport, uint viewportCount, Viewport* pViewports);
alias ProcCmdSetViewportShadingRatePaletteNV = fn void(CommandBuffer commandBuffer, uint firstViewport, uint viewportCount, ShadingRatePaletteNV* pShadingRatePalettes);
alias ProcCmdSetViewportSwizzleNV = fn void(CommandBuffer commandBuffer, uint firstViewport, uint viewportCount, ViewportSwizzleNV* pViewportSwizzles);
alias ProcCmdSetViewportWScalingEnableNV = fn void(CommandBuffer commandBuffer, uint viewportWScalingEnable);
alias ProcCmdSetViewportWScalingNV = fn void(CommandBuffer commandBuffer, uint firstViewport, uint viewportCount, ViewportWScalingNV* pViewportWScalings);
alias ProcCmdSetViewportWithCount = fn void(CommandBuffer commandBuffer, uint viewportCount, Viewport* pViewports);
alias ProcCmdSetViewportWithCountEXT = fn void(CommandBuffer commandBuffer, uint viewportCount, Viewport* pViewports);
alias ProcCmdSubpassShadingHUAWEI = fn void(CommandBuffer commandBuffer);
alias ProcCmdTraceRaysIndirect2KHR = fn void(CommandBuffer commandBuffer, DeviceAddress indirectDeviceAddress);
alias ProcCmdTraceRaysIndirectKHR = fn void(CommandBuffer commandBuffer, StridedDeviceAddressRegionKHR* pRaygenShaderBindingTable, StridedDeviceAddressRegionKHR* pMissShaderBindingTable, StridedDeviceAddressRegionKHR* pHitShaderBindingTable, StridedDeviceAddressRegionKHR* pCallableShaderBindingTable, DeviceAddress indirectDeviceAddress);
alias ProcCmdTraceRaysKHR = fn void(CommandBuffer commandBuffer, StridedDeviceAddressRegionKHR* pRaygenShaderBindingTable, StridedDeviceAddressRegionKHR* pMissShaderBindingTable, StridedDeviceAddressRegionKHR* pHitShaderBindingTable, StridedDeviceAddressRegionKHR* pCallableShaderBindingTable, uint width, uint height, uint depth);
alias ProcCmdTraceRaysNV = fn void(CommandBuffer commandBuffer, Buffer raygenShaderBindingTableBuffer, DeviceSize raygenShaderBindingOffset, Buffer missShaderBindingTableBuffer, DeviceSize missShaderBindingOffset, DeviceSize missShaderBindingStride, Buffer hitShaderBindingTableBuffer, DeviceSize hitShaderBindingOffset, DeviceSize hitShaderBindingStride, Buffer callableShaderBindingTableBuffer, DeviceSize callableShaderBindingOffset, DeviceSize callableShaderBindingStride, uint width, uint height, uint depth);
alias ProcCmdUpdateBuffer = fn void(CommandBuffer commandBuffer, Buffer dstBuffer, DeviceSize dstOffset, DeviceSize dataSize, void* pData);
alias ProcCmdUpdatePipelineIndirectBufferNV = fn void(CommandBuffer commandBuffer, PipelineBindPoint pipelineBindPoint, Pipeline pipeline);
alias ProcCmdWaitEvents = fn void(CommandBuffer commandBuffer, uint eventCount, Event* pEvents, PipelineStageFlags srcStageMask, PipelineStageFlags dstStageMask, uint memoryBarrierCount, MemoryBarrier* pMemoryBarriers, uint bufferMemoryBarrierCount, BufferMemoryBarrier* pBufferMemoryBarriers, uint imageMemoryBarrierCount, ImageMemoryBarrier* pImageMemoryBarriers);
alias ProcCmdWaitEvents2 = fn void(CommandBuffer commandBuffer, uint eventCount, Event* pEvents, DependencyInfo* pDependencyInfos);
alias ProcCmdWaitEvents2KHR = fn void(CommandBuffer commandBuffer, uint eventCount, Event* pEvents, DependencyInfo* pDependencyInfos);
alias ProcCmdWriteAccelerationStructuresPropertiesKHR = fn void(CommandBuffer commandBuffer, uint accelerationStructureCount, AccelerationStructureKHR* pAccelerationStructures, QueryType queryType, QueryPool queryPool, uint firstQuery);
alias ProcCmdWriteAccelerationStructuresPropertiesNV = fn void(CommandBuffer commandBuffer, uint accelerationStructureCount, AccelerationStructureNV* pAccelerationStructures, QueryType queryType, QueryPool queryPool, uint firstQuery);
alias ProcCmdWriteBufferMarker2AMD = fn void(CommandBuffer commandBuffer, PipelineStageFlags2 stage, Buffer dstBuffer, DeviceSize dstOffset, uint marker);
alias ProcCmdWriteBufferMarkerAMD = fn void(CommandBuffer commandBuffer, PipelineStageFlags pipelineStage, Buffer dstBuffer, DeviceSize dstOffset, uint marker);
alias ProcCmdWriteMicromapsPropertiesEXT = fn void(CommandBuffer commandBuffer, uint micromapCount, MicromapEXT* pMicromaps, QueryType queryType, QueryPool queryPool, uint firstQuery);
alias ProcCmdWriteTimestamp = fn void(CommandBuffer commandBuffer, PipelineStageFlags pipelineStage, QueryPool queryPool, uint query);
alias ProcCmdWriteTimestamp2 = fn void(CommandBuffer commandBuffer, PipelineStageFlags2 stage, QueryPool queryPool, uint query);
alias ProcCmdWriteTimestamp2KHR = fn void(CommandBuffer commandBuffer, PipelineStageFlags2 stage, QueryPool queryPool, uint query);
alias ProcCompileDeferredNV = fn Result(Device device, Pipeline pipeline, uint shader);
alias ProcConvertCooperativeVectorMatrixNV = fn Result(Device device, ConvertCooperativeVectorMatrixInfoNV* pInfo);
alias ProcCopyAccelerationStructureKHR = fn Result(Device device, DeferredOperationKHR deferredOperation, CopyAccelerationStructureInfoKHR* pInfo);
alias ProcCopyAccelerationStructureToMemoryKHR = fn Result(Device device, DeferredOperationKHR deferredOperation, CopyAccelerationStructureToMemoryInfoKHR* pInfo);
alias ProcCopyImageToImage = fn Result(Device device, CopyImageToImageInfo* pCopyImageToImageInfo);
alias ProcCopyImageToImageEXT = fn Result(Device device, CopyImageToImageInfo* pCopyImageToImageInfo);
alias ProcCopyImageToMemory = fn Result(Device device, CopyImageToMemoryInfo* pCopyImageToMemoryInfo);
alias ProcCopyImageToMemoryEXT = fn Result(Device device, CopyImageToMemoryInfo* pCopyImageToMemoryInfo);
alias ProcCopyMemoryToAccelerationStructureKHR = fn Result(Device device, DeferredOperationKHR deferredOperation, CopyMemoryToAccelerationStructureInfoKHR* pInfo);
alias ProcCopyMemoryToImage = fn Result(Device device, CopyMemoryToImageInfo* pCopyMemoryToImageInfo);
alias ProcCopyMemoryToImageEXT = fn Result(Device device, CopyMemoryToImageInfo* pCopyMemoryToImageInfo);
alias ProcCopyMemoryToMicromapEXT = fn Result(Device device, DeferredOperationKHR deferredOperation, CopyMemoryToMicromapInfoEXT* pInfo);
alias ProcCopyMicromapEXT = fn Result(Device device, DeferredOperationKHR deferredOperation, CopyMicromapInfoEXT* pInfo);
alias ProcCopyMicromapToMemoryEXT = fn Result(Device device, DeferredOperationKHR deferredOperation, CopyMicromapToMemoryInfoEXT* pInfo);
alias ProcCreateAccelerationStructureKHR = fn Result(Device device, AccelerationStructureCreateInfoKHR* pCreateInfo, AllocationCallbacks* pAllocator, AccelerationStructureKHR* pAccelerationStructure);
alias ProcCreateAccelerationStructureNV = fn Result(Device device, AccelerationStructureCreateInfoNV* pCreateInfo, AllocationCallbacks* pAllocator, AccelerationStructureNV* pAccelerationStructure);
alias ProcCreateBuffer = fn Result(Device device, BufferCreateInfo* pCreateInfo, AllocationCallbacks* pAllocator, Buffer* pBuffer);
alias ProcCreateBufferView = fn Result(Device device, BufferViewCreateInfo* pCreateInfo, AllocationCallbacks* pAllocator, BufferView* pView);
alias ProcCreateCommandPool = fn Result(Device device, CommandPoolCreateInfo* pCreateInfo, AllocationCallbacks* pAllocator, CommandPool* pCommandPool);
alias ProcCreateComputePipelines = fn Result(Device device, PipelineCache pipelineCache, uint createInfoCount, ComputePipelineCreateInfo* pCreateInfos, AllocationCallbacks* pAllocator, Pipeline* pPipelines);
alias ProcCreateCuFunctionNVX = fn Result(Device device, CuFunctionCreateInfoNVX* pCreateInfo, AllocationCallbacks* pAllocator, CuFunctionNVX* pFunction);
alias ProcCreateCuModuleNVX = fn Result(Device device, CuModuleCreateInfoNVX* pCreateInfo, AllocationCallbacks* pAllocator, CuModuleNVX* pModule);
alias ProcCreateCudaFunctionNV = fn Result(Device device, CudaFunctionCreateInfoNV* pCreateInfo, AllocationCallbacks* pAllocator, CudaFunctionNV* pFunction);
alias ProcCreateCudaModuleNV = fn Result(Device device, CudaModuleCreateInfoNV* pCreateInfo, AllocationCallbacks* pAllocator, CudaModuleNV* pModule);
alias ProcCreateDeferredOperationKHR = fn Result(Device device, AllocationCallbacks* pAllocator, DeferredOperationKHR* pDeferredOperation);
alias ProcCreateDescriptorPool = fn Result(Device device, DescriptorPoolCreateInfo* pCreateInfo, AllocationCallbacks* pAllocator, DescriptorPool* pDescriptorPool);
alias ProcCreateDescriptorSetLayout = fn Result(Device device, DescriptorSetLayoutCreateInfo* pCreateInfo, AllocationCallbacks* pAllocator, DescriptorSetLayout* pSetLayout);
alias ProcCreateDescriptorUpdateTemplate = fn Result(Device device, DescriptorUpdateTemplateCreateInfo* pCreateInfo, AllocationCallbacks* pAllocator, DescriptorUpdateTemplate* pDescriptorUpdateTemplate);
alias ProcCreateDescriptorUpdateTemplateKHR = fn Result(Device device, DescriptorUpdateTemplateCreateInfo* pCreateInfo, AllocationCallbacks* pAllocator, DescriptorUpdateTemplate* pDescriptorUpdateTemplate);
alias ProcCreateEvent = fn Result(Device device, EventCreateInfo* pCreateInfo, AllocationCallbacks* pAllocator, Event* pEvent);
alias ProcCreateFence = fn Result(Device device, FenceCreateInfo* pCreateInfo, AllocationCallbacks* pAllocator, Fence* pFence);
alias ProcCreateFramebuffer = fn Result(Device device, FramebufferCreateInfo* pCreateInfo, AllocationCallbacks* pAllocator, Framebuffer* pFramebuffer);
alias ProcCreateGraphicsPipelines = fn Result(Device device, PipelineCache pipelineCache, uint createInfoCount, GraphicsPipelineCreateInfo* pCreateInfos, AllocationCallbacks* pAllocator, Pipeline* pPipelines);
alias ProcCreateImage = fn Result(Device device, ImageCreateInfo* pCreateInfo, AllocationCallbacks* pAllocator, Image* pImage);
alias ProcCreateImageView = fn Result(Device device, ImageViewCreateInfo* pCreateInfo, AllocationCallbacks* pAllocator, ImageView* pView);
alias ProcCreateIndirectCommandsLayoutEXT = fn Result(Device device, IndirectCommandsLayoutCreateInfoEXT* pCreateInfo, AllocationCallbacks* pAllocator, IndirectCommandsLayoutEXT* pIndirectCommandsLayout);
alias ProcCreateIndirectCommandsLayoutNV = fn Result(Device device, IndirectCommandsLayoutCreateInfoNV* pCreateInfo, AllocationCallbacks* pAllocator, IndirectCommandsLayoutNV* pIndirectCommandsLayout);
alias ProcCreateIndirectExecutionSetEXT = fn Result(Device device, IndirectExecutionSetCreateInfoEXT* pCreateInfo, AllocationCallbacks* pAllocator, IndirectExecutionSetEXT* pIndirectExecutionSet);
alias ProcCreateMicromapEXT = fn Result(Device device, MicromapCreateInfoEXT* pCreateInfo, AllocationCallbacks* pAllocator, MicromapEXT* pMicromap);
alias ProcCreateOpticalFlowSessionNV = fn Result(Device device, OpticalFlowSessionCreateInfoNV* pCreateInfo, AllocationCallbacks* pAllocator, OpticalFlowSessionNV* pSession);
alias ProcCreatePipelineBinariesKHR = fn Result(Device device, PipelineBinaryCreateInfoKHR* pCreateInfo, AllocationCallbacks* pAllocator, PipelineBinaryHandlesInfoKHR* pBinaries);
alias ProcCreatePipelineCache = fn Result(Device device, PipelineCacheCreateInfo* pCreateInfo, AllocationCallbacks* pAllocator, PipelineCache* pPipelineCache);
alias ProcCreatePipelineLayout = fn Result(Device device, PipelineLayoutCreateInfo* pCreateInfo, AllocationCallbacks* pAllocator, PipelineLayout* pPipelineLayout);
alias ProcCreatePrivateDataSlot = fn Result(Device device, PrivateDataSlotCreateInfo* pCreateInfo, AllocationCallbacks* pAllocator, PrivateDataSlot* pPrivateDataSlot);
alias ProcCreatePrivateDataSlotEXT = fn Result(Device device, PrivateDataSlotCreateInfo* pCreateInfo, AllocationCallbacks* pAllocator, PrivateDataSlot* pPrivateDataSlot);
alias ProcCreateQueryPool = fn Result(Device device, QueryPoolCreateInfo* pCreateInfo, AllocationCallbacks* pAllocator, QueryPool* pQueryPool);
alias ProcCreateRayTracingPipelinesKHR = fn Result(Device device, DeferredOperationKHR deferredOperation, PipelineCache pipelineCache, uint createInfoCount, RayTracingPipelineCreateInfoKHR* pCreateInfos, AllocationCallbacks* pAllocator, Pipeline* pPipelines);
alias ProcCreateRayTracingPipelinesNV = fn Result(Device device, PipelineCache pipelineCache, uint createInfoCount, RayTracingPipelineCreateInfoNV* pCreateInfos, AllocationCallbacks* pAllocator, Pipeline* pPipelines);
alias ProcCreateRenderPass = fn Result(Device device, RenderPassCreateInfo* pCreateInfo, AllocationCallbacks* pAllocator, RenderPass* pRenderPass);
alias ProcCreateRenderPass2 = fn Result(Device device, RenderPassCreateInfo2* pCreateInfo, AllocationCallbacks* pAllocator, RenderPass* pRenderPass);
alias ProcCreateRenderPass2KHR = fn Result(Device device, RenderPassCreateInfo2* pCreateInfo, AllocationCallbacks* pAllocator, RenderPass* pRenderPass);
alias ProcCreateSampler = fn Result(Device device, SamplerCreateInfo* pCreateInfo, AllocationCallbacks* pAllocator, Sampler* pSampler);
alias ProcCreateSamplerYcbcrConversion = fn Result(Device device, SamplerYcbcrConversionCreateInfo* pCreateInfo, AllocationCallbacks* pAllocator, SamplerYcbcrConversion* pYcbcrConversion);
alias ProcCreateSamplerYcbcrConversionKHR = fn Result(Device device, SamplerYcbcrConversionCreateInfo* pCreateInfo, AllocationCallbacks* pAllocator, SamplerYcbcrConversion* pYcbcrConversion);
alias ProcCreateSemaphore = fn Result(Device device, SemaphoreCreateInfo* pCreateInfo, AllocationCallbacks* pAllocator, Semaphore* pSemaphore);
alias ProcCreateShaderModule = fn Result(Device device, ShaderModuleCreateInfo* pCreateInfo, AllocationCallbacks* pAllocator, ShaderModule* pShaderModule);
alias ProcCreateShadersEXT = fn Result(Device device, uint createInfoCount, ShaderCreateInfoEXT* pCreateInfos, AllocationCallbacks* pAllocator, ShaderEXT* pShaders);
alias ProcCreateSharedSwapchainsKHR = fn Result(Device device, uint swapchainCount, SwapchainCreateInfoKHR* pCreateInfos, AllocationCallbacks* pAllocator, SwapchainKHR* pSwapchains);
alias ProcCreateSwapchainKHR = fn Result(Device device, SwapchainCreateInfoKHR* pCreateInfo, AllocationCallbacks* pAllocator, SwapchainKHR* pSwapchain);
alias ProcCreateValidationCacheEXT = fn Result(Device device, ValidationCacheCreateInfoEXT* pCreateInfo, AllocationCallbacks* pAllocator, ValidationCacheEXT* pValidationCache);
alias ProcCreateVideoSessionKHR = fn Result(Device device, VideoSessionCreateInfoKHR* pCreateInfo, AllocationCallbacks* pAllocator, VideoSessionKHR* pVideoSession);
alias ProcCreateVideoSessionParametersKHR = fn Result(Device device, VideoSessionParametersCreateInfoKHR* pCreateInfo, AllocationCallbacks* pAllocator, VideoSessionParametersKHR* pVideoSessionParameters);
alias ProcDebugMarkerSetObjectNameEXT = fn Result(Device device, DebugMarkerObjectNameInfoEXT* pNameInfo);
alias ProcDebugMarkerSetObjectTagEXT = fn Result(Device device, DebugMarkerObjectTagInfoEXT* pTagInfo);
alias ProcDeferredOperationJoinKHR = fn Result(Device device, DeferredOperationKHR operation);
alias ProcDestroyAccelerationStructureKHR = fn void(Device device, AccelerationStructureKHR accelerationStructure, AllocationCallbacks* pAllocator);
alias ProcDestroyAccelerationStructureNV = fn void(Device device, AccelerationStructureNV accelerationStructure, AllocationCallbacks* pAllocator);
alias ProcDestroyBuffer = fn void(Device device, Buffer buffer, AllocationCallbacks* pAllocator);
alias ProcDestroyBufferView = fn void(Device device, BufferView bufferView, AllocationCallbacks* pAllocator);
alias ProcDestroyCommandPool = fn void(Device device, CommandPool commandPool, AllocationCallbacks* pAllocator);
alias ProcDestroyCuFunctionNVX = fn void(Device device, CuFunctionNVX function, AllocationCallbacks* pAllocator);
alias ProcDestroyCuModuleNVX = fn void(Device device, CuModuleNVX module_, AllocationCallbacks* pAllocator);
alias ProcDestroyCudaFunctionNV = fn void(Device device, CudaFunctionNV function, AllocationCallbacks* pAllocator);
alias ProcDestroyCudaModuleNV = fn void(Device device, CudaModuleNV module_, AllocationCallbacks* pAllocator);
alias ProcDestroyDeferredOperationKHR = fn void(Device device, DeferredOperationKHR operation, AllocationCallbacks* pAllocator);
alias ProcDestroyDescriptorPool = fn void(Device device, DescriptorPool descriptorPool, AllocationCallbacks* pAllocator);
alias ProcDestroyDescriptorSetLayout = fn void(Device device, DescriptorSetLayout descriptorSetLayout, AllocationCallbacks* pAllocator);
alias ProcDestroyDescriptorUpdateTemplate = fn void(Device device, DescriptorUpdateTemplate descriptorUpdateTemplate, AllocationCallbacks* pAllocator);
alias ProcDestroyDescriptorUpdateTemplateKHR = fn void(Device device, DescriptorUpdateTemplate descriptorUpdateTemplate, AllocationCallbacks* pAllocator);
alias ProcDestroyDevice = fn void(Device device, AllocationCallbacks* pAllocator);
alias ProcDestroyEvent = fn void(Device device, Event event, AllocationCallbacks* pAllocator);
alias ProcDestroyFence = fn void(Device device, Fence fence, AllocationCallbacks* pAllocator);
alias ProcDestroyFramebuffer = fn void(Device device, Framebuffer framebuffer, AllocationCallbacks* pAllocator);
alias ProcDestroyImage = fn void(Device device, Image image, AllocationCallbacks* pAllocator);
alias ProcDestroyImageView = fn void(Device device, ImageView imageView, AllocationCallbacks* pAllocator);
alias ProcDestroyIndirectCommandsLayoutEXT = fn void(Device device, IndirectCommandsLayoutEXT indirectCommandsLayout, AllocationCallbacks* pAllocator);
alias ProcDestroyIndirectCommandsLayoutNV = fn void(Device device, IndirectCommandsLayoutNV indirectCommandsLayout, AllocationCallbacks* pAllocator);
alias ProcDestroyIndirectExecutionSetEXT = fn void(Device device, IndirectExecutionSetEXT indirectExecutionSet, AllocationCallbacks* pAllocator);
alias ProcDestroyMicromapEXT = fn void(Device device, MicromapEXT micromap, AllocationCallbacks* pAllocator);
alias ProcDestroyOpticalFlowSessionNV = fn void(Device device, OpticalFlowSessionNV session, AllocationCallbacks* pAllocator);
alias ProcDestroyPipeline = fn void(Device device, Pipeline pipeline, AllocationCallbacks* pAllocator);
alias ProcDestroyPipelineBinaryKHR = fn void(Device device, PipelineBinaryKHR pipelineBinary, AllocationCallbacks* pAllocator);
alias ProcDestroyPipelineCache = fn void(Device device, PipelineCache pipelineCache, AllocationCallbacks* pAllocator);
alias ProcDestroyPipelineLayout = fn void(Device device, PipelineLayout pipelineLayout, AllocationCallbacks* pAllocator);
alias ProcDestroyPrivateDataSlot = fn void(Device device, PrivateDataSlot privateDataSlot, AllocationCallbacks* pAllocator);
alias ProcDestroyPrivateDataSlotEXT = fn void(Device device, PrivateDataSlot privateDataSlot, AllocationCallbacks* pAllocator);
alias ProcDestroyQueryPool = fn void(Device device, QueryPool queryPool, AllocationCallbacks* pAllocator);
alias ProcDestroyRenderPass = fn void(Device device, RenderPass renderPass, AllocationCallbacks* pAllocator);
alias ProcDestroySampler = fn void(Device device, Sampler sampler, AllocationCallbacks* pAllocator);
alias ProcDestroySamplerYcbcrConversion = fn void(Device device, SamplerYcbcrConversion ycbcrConversion, AllocationCallbacks* pAllocator);
alias ProcDestroySamplerYcbcrConversionKHR = fn void(Device device, SamplerYcbcrConversion ycbcrConversion, AllocationCallbacks* pAllocator);
alias ProcDestroySemaphore = fn void(Device device, Semaphore semaphore, AllocationCallbacks* pAllocator);
alias ProcDestroyShaderEXT = fn void(Device device, ShaderEXT shader, AllocationCallbacks* pAllocator);
alias ProcDestroyShaderModule = fn void(Device device, ShaderModule shaderModule, AllocationCallbacks* pAllocator);
alias ProcDestroySwapchainKHR = fn void(Device device, SwapchainKHR swapchain, AllocationCallbacks* pAllocator);
alias ProcDestroyValidationCacheEXT = fn void(Device device, ValidationCacheEXT validationCache, AllocationCallbacks* pAllocator);
alias ProcDestroyVideoSessionKHR = fn void(Device device, VideoSessionKHR videoSession, AllocationCallbacks* pAllocator);
alias ProcDestroyVideoSessionParametersKHR = fn void(Device device, VideoSessionParametersKHR videoSessionParameters, AllocationCallbacks* pAllocator);
alias ProcDeviceWaitIdle = fn Result(Device device);
alias ProcDisplayPowerControlEXT = fn Result(Device device, DisplayKHR display, DisplayPowerInfoEXT* pDisplayPowerInfo);
alias ProcEndCommandBuffer = fn Result(CommandBuffer commandBuffer);
alias ProcExportMetalObjectsEXT = fn void(Device device, ExportMetalObjectsInfoEXT* pMetalObjectsInfo);
alias ProcFlushMappedMemoryRanges = fn Result(Device device, uint memoryRangeCount, MappedMemoryRange* pMemoryRanges);
alias ProcFreeCommandBuffers = fn void(Device device, CommandPool commandPool, uint commandBufferCount, CommandBuffer* pCommandBuffers);
alias ProcFreeDescriptorSets = fn Result(Device device, DescriptorPool descriptorPool, uint descriptorSetCount, DescriptorSet* pDescriptorSets);
alias ProcFreeMemory = fn void(Device device, DeviceMemory memory, AllocationCallbacks* pAllocator);
alias ProcGetAccelerationStructureBuildSizesKHR = fn void(Device device, AccelerationStructureBuildTypeKHR buildType, AccelerationStructureBuildGeometryInfoKHR* pBuildInfo, uint* pMaxPrimitiveCounts, AccelerationStructureBuildSizesInfoKHR* pSizeInfo);
alias ProcGetAccelerationStructureDeviceAddressKHR = fn DeviceAddress(Device device, AccelerationStructureDeviceAddressInfoKHR* pInfo);
alias ProcGetAccelerationStructureHandleNV = fn Result(Device device, AccelerationStructureNV accelerationStructure, usz dataSize, void* pData);
alias ProcGetAccelerationStructureMemoryRequirementsNV = fn void(Device device, AccelerationStructureMemoryRequirementsInfoNV* pInfo, MemoryRequirements2KHR* pMemoryRequirements);
alias ProcGetAccelerationStructureOpaqueCaptureDescriptorDataEXT = fn Result(Device device, AccelerationStructureCaptureDescriptorDataInfoEXT* pInfo, void* pData);
alias ProcGetBufferDeviceAddress = fn DeviceAddress(Device device, BufferDeviceAddressInfo* pInfo);
alias ProcGetBufferDeviceAddressEXT = fn DeviceAddress(Device device, BufferDeviceAddressInfo* pInfo);
alias ProcGetBufferDeviceAddressKHR = fn DeviceAddress(Device device, BufferDeviceAddressInfo* pInfo);
alias ProcGetBufferMemoryRequirements = fn void(Device device, Buffer buffer, MemoryRequirements* pMemoryRequirements);
alias ProcGetBufferMemoryRequirements2 = fn void(Device device, BufferMemoryRequirementsInfo2* pInfo, MemoryRequirements2* pMemoryRequirements);
alias ProcGetBufferMemoryRequirements2KHR = fn void(Device device, BufferMemoryRequirementsInfo2* pInfo, MemoryRequirements2* pMemoryRequirements);
alias ProcGetBufferOpaqueCaptureAddress = fn ulong(Device device, BufferDeviceAddressInfo* pInfo);
alias ProcGetBufferOpaqueCaptureAddressKHR = fn ulong(Device device, BufferDeviceAddressInfo* pInfo);
alias ProcGetBufferOpaqueCaptureDescriptorDataEXT = fn Result(Device device, BufferCaptureDescriptorDataInfoEXT* pInfo, void* pData);
alias ProcGetCalibratedTimestampsEXT = fn Result(Device device, uint timestampCount, CalibratedTimestampInfoKHR* pTimestampInfos, ulong* pTimestamps, ulong* pMaxDeviation);
alias ProcGetCalibratedTimestampsKHR = fn Result(Device device, uint timestampCount, CalibratedTimestampInfoKHR* pTimestampInfos, ulong* pTimestamps, ulong* pMaxDeviation);
alias ProcGetClusterAccelerationStructureBuildSizesNV = fn void(Device device, ClusterAccelerationStructureInputInfoNV* pInfo, AccelerationStructureBuildSizesInfoKHR* pSizeInfo);
alias ProcGetCudaModuleCacheNV = fn Result(Device device, CudaModuleNV module_, usz* pCacheSize, void* pCacheData);
alias ProcGetDeferredOperationMaxConcurrencyKHR = fn uint(Device device, DeferredOperationKHR operation);
alias ProcGetDeferredOperationResultKHR = fn Result(Device device, DeferredOperationKHR operation);
alias ProcGetDescriptorEXT = fn void(Device device, DescriptorGetInfoEXT* pDescriptorInfo, usz dataSize, void* pDescriptor);
alias ProcGetDescriptorSetHostMappingVALVE = fn void(Device device, DescriptorSet descriptorSet, void** ppData);
alias ProcGetDescriptorSetLayoutBindingOffsetEXT = fn void(Device device, DescriptorSetLayout layout, uint binding, DeviceSize* pOffset);
alias ProcGetDescriptorSetLayoutHostMappingInfoVALVE = fn void(Device device, DescriptorSetBindingReferenceVALVE* pBindingReference, DescriptorSetLayoutHostMappingInfoVALVE* pHostMapping);
alias ProcGetDescriptorSetLayoutSizeEXT = fn void(Device device, DescriptorSetLayout layout, DeviceSize* pLayoutSizeInBytes);
alias ProcGetDescriptorSetLayoutSupport = fn void(Device device, DescriptorSetLayoutCreateInfo* pCreateInfo, DescriptorSetLayoutSupport* pSupport);
alias ProcGetDescriptorSetLayoutSupportKHR = fn void(Device device, DescriptorSetLayoutCreateInfo* pCreateInfo, DescriptorSetLayoutSupport* pSupport);
alias ProcGetDeviceAccelerationStructureCompatibilityKHR = fn void(Device device, AccelerationStructureVersionInfoKHR* pVersionInfo, AccelerationStructureCompatibilityKHR* pCompatibility);
alias ProcGetDeviceBufferMemoryRequirements = fn void(Device device, DeviceBufferMemoryRequirements* pInfo, MemoryRequirements2* pMemoryRequirements);
alias ProcGetDeviceBufferMemoryRequirementsKHR = fn void(Device device, DeviceBufferMemoryRequirements* pInfo, MemoryRequirements2* pMemoryRequirements);
alias ProcGetDeviceFaultInfoEXT = fn Result(Device device, DeviceFaultCountsEXT* pFaultCounts, DeviceFaultInfoEXT* pFaultInfo);
alias ProcGetDeviceGroupPeerMemoryFeatures = fn void(Device device, uint heapIndex, uint localDeviceIndex, uint remoteDeviceIndex, PeerMemoryFeatureFlags* pPeerMemoryFeatures);
alias ProcGetDeviceGroupPeerMemoryFeaturesKHR = fn void(Device device, uint heapIndex, uint localDeviceIndex, uint remoteDeviceIndex, PeerMemoryFeatureFlags* pPeerMemoryFeatures);
alias ProcGetDeviceGroupPresentCapabilitiesKHR = fn Result(Device device, DeviceGroupPresentCapabilitiesKHR* pDeviceGroupPresentCapabilities);
alias ProcGetDeviceGroupSurfacePresentModes2EXT = fn Result(Device device, PhysicalDeviceSurfaceInfo2KHR* pSurfaceInfo, DeviceGroupPresentModeFlagsKHR* pModes);
alias ProcGetDeviceGroupSurfacePresentModesKHR = fn Result(Device device, SurfaceKHR surface, DeviceGroupPresentModeFlagsKHR* pModes);
alias ProcGetDeviceImageMemoryRequirements = fn void(Device device, DeviceImageMemoryRequirements* pInfo, MemoryRequirements2* pMemoryRequirements);
alias ProcGetDeviceImageMemoryRequirementsKHR = fn void(Device device, DeviceImageMemoryRequirements* pInfo, MemoryRequirements2* pMemoryRequirements);
alias ProcGetDeviceImageSparseMemoryRequirements = fn void(Device device, DeviceImageMemoryRequirements* pInfo, uint* pSparseMemoryRequirementCount, SparseImageMemoryRequirements2* pSparseMemoryRequirements);
alias ProcGetDeviceImageSparseMemoryRequirementsKHR = fn void(Device device, DeviceImageMemoryRequirements* pInfo, uint* pSparseMemoryRequirementCount, SparseImageMemoryRequirements2* pSparseMemoryRequirements);
alias ProcGetDeviceImageSubresourceLayout = fn void(Device device, DeviceImageSubresourceInfo* pInfo, SubresourceLayout2* pLayout);
alias ProcGetDeviceImageSubresourceLayoutKHR = fn void(Device device, DeviceImageSubresourceInfo* pInfo, SubresourceLayout2* pLayout);
alias ProcGetDeviceMemoryCommitment = fn void(Device device, DeviceMemory memory, DeviceSize* pCommittedMemoryInBytes);
alias ProcGetDeviceMemoryOpaqueCaptureAddress = fn ulong(Device device, DeviceMemoryOpaqueCaptureAddressInfo* pInfo);
alias ProcGetDeviceMemoryOpaqueCaptureAddressKHR = fn ulong(Device device, DeviceMemoryOpaqueCaptureAddressInfo* pInfo);
alias ProcGetDeviceMicromapCompatibilityEXT = fn void(Device device, MicromapVersionInfoEXT* pVersionInfo, AccelerationStructureCompatibilityKHR* pCompatibility);
alias ProcGetDeviceProcAddr = fn ProcVoidFunction(Device device, ZString pName);
alias ProcGetDeviceQueue = fn void(Device device, uint queueFamilyIndex, uint queueIndex, Queue* pQueue);
alias ProcGetDeviceQueue2 = fn void(Device device, DeviceQueueInfo2* pQueueInfo, Queue* pQueue);
alias ProcGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI = fn Result(Device device, RenderPass renderpass, Extent2D* pMaxWorkgroupSize);
alias ProcGetDynamicRenderingTilePropertiesQCOM = fn Result(Device device, RenderingInfo* pRenderingInfo, TilePropertiesQCOM* pProperties);
alias ProcGetEncodedVideoSessionParametersKHR = fn Result(Device device, VideoEncodeSessionParametersGetInfoKHR* pVideoSessionParametersInfo, VideoEncodeSessionParametersFeedbackInfoKHR* pFeedbackInfo, usz* pDataSize, void* pData);
alias ProcGetEventStatus = fn Result(Device device, Event event);
alias ProcGetFenceFdKHR = fn Result(Device device, FenceGetFdInfoKHR* pGetFdInfo, CInt* pFd);
alias ProcGetFenceStatus = fn Result(Device device, Fence fence);
alias ProcGetFenceWin32HandleKHR = fn Result(Device device, FenceGetWin32HandleInfoKHR* pGetWin32HandleInfo, Win32_HANDLE* pHandle);
alias ProcGetFramebufferTilePropertiesQCOM = fn Result(Device device, Framebuffer framebuffer, uint* pPropertiesCount, TilePropertiesQCOM* pProperties);
alias ProcGetGeneratedCommandsMemoryRequirementsEXT = fn void(Device device, GeneratedCommandsMemoryRequirementsInfoEXT* pInfo, MemoryRequirements2* pMemoryRequirements);
alias ProcGetGeneratedCommandsMemoryRequirementsNV = fn void(Device device, GeneratedCommandsMemoryRequirementsInfoNV* pInfo, MemoryRequirements2* pMemoryRequirements);
alias ProcGetImageDrmFormatModifierPropertiesEXT = fn Result(Device device, Image image, ImageDrmFormatModifierPropertiesEXT* pProperties);
alias ProcGetImageMemoryRequirements = fn void(Device device, Image image, MemoryRequirements* pMemoryRequirements);
alias ProcGetImageMemoryRequirements2 = fn void(Device device, ImageMemoryRequirementsInfo2* pInfo, MemoryRequirements2* pMemoryRequirements);
alias ProcGetImageMemoryRequirements2KHR = fn void(Device device, ImageMemoryRequirementsInfo2* pInfo, MemoryRequirements2* pMemoryRequirements);
alias ProcGetImageOpaqueCaptureDescriptorDataEXT = fn Result(Device device, ImageCaptureDescriptorDataInfoEXT* pInfo, void* pData);
alias ProcGetImageSparseMemoryRequirements = fn void(Device device, Image image, uint* pSparseMemoryRequirementCount, SparseImageMemoryRequirements* pSparseMemoryRequirements);
alias ProcGetImageSparseMemoryRequirements2 = fn void(Device device, ImageSparseMemoryRequirementsInfo2* pInfo, uint* pSparseMemoryRequirementCount, SparseImageMemoryRequirements2* pSparseMemoryRequirements);
alias ProcGetImageSparseMemoryRequirements2KHR = fn void(Device device, ImageSparseMemoryRequirementsInfo2* pInfo, uint* pSparseMemoryRequirementCount, SparseImageMemoryRequirements2* pSparseMemoryRequirements);
alias ProcGetImageSubresourceLayout = fn void(Device device, Image image, ImageSubresource* pSubresource, SubresourceLayout* pLayout);
alias ProcGetImageSubresourceLayout2 = fn void(Device device, Image image, ImageSubresource2* pSubresource, SubresourceLayout2* pLayout);
alias ProcGetImageSubresourceLayout2EXT = fn void(Device device, Image image, ImageSubresource2* pSubresource, SubresourceLayout2* pLayout);
alias ProcGetImageSubresourceLayout2KHR = fn void(Device device, Image image, ImageSubresource2* pSubresource, SubresourceLayout2* pLayout);
alias ProcGetImageViewAddressNVX = fn Result(Device device, ImageView imageView, ImageViewAddressPropertiesNVX* pProperties);
alias ProcGetImageViewHandle64NVX = fn ulong(Device device, ImageViewHandleInfoNVX* pInfo);
alias ProcGetImageViewHandleNVX = fn uint(Device device, ImageViewHandleInfoNVX* pInfo);
alias ProcGetImageViewOpaqueCaptureDescriptorDataEXT = fn Result(Device device, ImageViewCaptureDescriptorDataInfoEXT* pInfo, void* pData);
alias ProcGetLatencyTimingsNV = fn void(Device device, SwapchainKHR swapchain, GetLatencyMarkerInfoNV* pLatencyMarkerInfo);
alias ProcGetMemoryFdKHR = fn Result(Device device, MemoryGetFdInfoKHR* pGetFdInfo, CInt* pFd);
alias ProcGetMemoryFdPropertiesKHR = fn Result(Device device, ExternalMemoryHandleTypeFlags handleType, CInt fd, MemoryFdPropertiesKHR* pMemoryFdProperties);
alias ProcGetMemoryHostPointerPropertiesEXT = fn Result(Device device, ExternalMemoryHandleTypeFlags handleType, void* pHostPointer, MemoryHostPointerPropertiesEXT* pMemoryHostPointerProperties);
alias ProcGetMemoryMetalHandleEXT = fn Result(Device device, MemoryGetMetalHandleInfoEXT* pGetMetalHandleInfo, void** pHandle);
alias ProcGetMemoryMetalHandlePropertiesEXT = fn Result(Device device, ExternalMemoryHandleTypeFlags handleType, void* pHandle, MemoryMetalHandlePropertiesEXT* pMemoryMetalHandleProperties);
alias ProcGetMemoryRemoteAddressNV = fn Result(Device device, MemoryGetRemoteAddressInfoNV* pMemoryGetRemoteAddressInfo, RemoteAddressNV* pAddress);
alias ProcGetMemoryWin32HandleKHR = fn Result(Device device, MemoryGetWin32HandleInfoKHR* pGetWin32HandleInfo, Win32_HANDLE* pHandle);
alias ProcGetMemoryWin32HandleNV = fn Result(Device device, DeviceMemory memory, ExternalMemoryHandleTypeFlagsNV handleType, Win32_HANDLE* pHandle);
alias ProcGetMemoryWin32HandlePropertiesKHR = fn Result(Device device, ExternalMemoryHandleTypeFlags handleType, Win32_HANDLE handle, MemoryWin32HandlePropertiesKHR* pMemoryWin32HandleProperties);
alias ProcGetMicromapBuildSizesEXT = fn void(Device device, AccelerationStructureBuildTypeKHR buildType, MicromapBuildInfoEXT* pBuildInfo, MicromapBuildSizesInfoEXT* pSizeInfo);
alias ProcGetPartitionedAccelerationStructuresBuildSizesNV = fn void(Device device, PartitionedAccelerationStructureInstancesInputNV* pInfo, AccelerationStructureBuildSizesInfoKHR* pSizeInfo);
alias ProcGetPastPresentationTimingGOOGLE = fn Result(Device device, SwapchainKHR swapchain, uint* pPresentationTimingCount, PastPresentationTimingGOOGLE* pPresentationTimings);
alias ProcGetPerformanceParameterINTEL = fn Result(Device device, PerformanceParameterTypeINTEL parameter, PerformanceValueINTEL* pValue);
alias ProcGetPipelineBinaryDataKHR = fn Result(Device device, PipelineBinaryDataInfoKHR* pInfo, PipelineBinaryKeyKHR* pPipelineBinaryKey, usz* pPipelineBinaryDataSize, void* pPipelineBinaryData);
alias ProcGetPipelineCacheData = fn Result(Device device, PipelineCache pipelineCache, usz* pDataSize, void* pData);
alias ProcGetPipelineExecutableInternalRepresentationsKHR = fn Result(Device device, PipelineExecutableInfoKHR* pExecutableInfo, uint* pInternalRepresentationCount, PipelineExecutableInternalRepresentationKHR* pInternalRepresentations);
alias ProcGetPipelineExecutablePropertiesKHR = fn Result(Device device, PipelineInfoKHR* pPipelineInfo, uint* pExecutableCount, PipelineExecutablePropertiesKHR* pProperties);
alias ProcGetPipelineExecutableStatisticsKHR = fn Result(Device device, PipelineExecutableInfoKHR* pExecutableInfo, uint* pStatisticCount, PipelineExecutableStatisticKHR* pStatistics);
alias ProcGetPipelineIndirectDeviceAddressNV = fn DeviceAddress(Device device, PipelineIndirectDeviceAddressInfoNV* pInfo);
alias ProcGetPipelineIndirectMemoryRequirementsNV = fn void(Device device, ComputePipelineCreateInfo* pCreateInfo, MemoryRequirements2* pMemoryRequirements);
alias ProcGetPipelineKeyKHR = fn Result(Device device, PipelineCreateInfoKHR* pPipelineCreateInfo, PipelineBinaryKeyKHR* pPipelineKey);
alias ProcGetPipelinePropertiesEXT = fn Result(Device device, PipelineInfoEXT* pPipelineInfo, BaseOutStructure* pPipelineProperties);
alias ProcGetPrivateData = fn void(Device device, ObjectType objectType, ulong objectHandle, PrivateDataSlot privateDataSlot, ulong* pData);
alias ProcGetPrivateDataEXT = fn void(Device device, ObjectType objectType, ulong objectHandle, PrivateDataSlot privateDataSlot, ulong* pData);
alias ProcGetQueryPoolResults = fn Result(Device device, QueryPool queryPool, uint firstQuery, uint queryCount, usz dataSize, void* pData, DeviceSize stride, QueryResultFlags flags);
alias ProcGetQueueCheckpointData2NV = fn void(Queue queue, uint* pCheckpointDataCount, CheckpointData2NV* pCheckpointData);
alias ProcGetQueueCheckpointDataNV = fn void(Queue queue, uint* pCheckpointDataCount, CheckpointDataNV* pCheckpointData);
alias ProcGetRayTracingCaptureReplayShaderGroupHandlesKHR = fn Result(Device device, Pipeline pipeline, uint firstGroup, uint groupCount, usz dataSize, void* pData);
alias ProcGetRayTracingShaderGroupHandlesKHR = fn Result(Device device, Pipeline pipeline, uint firstGroup, uint groupCount, usz dataSize, void* pData);
alias ProcGetRayTracingShaderGroupHandlesNV = fn Result(Device device, Pipeline pipeline, uint firstGroup, uint groupCount, usz dataSize, void* pData);
alias ProcGetRayTracingShaderGroupStackSizeKHR = fn DeviceSize(Device device, Pipeline pipeline, uint group, ShaderGroupShaderKHR groupShader);
alias ProcGetRefreshCycleDurationGOOGLE = fn Result(Device device, SwapchainKHR swapchain, RefreshCycleDurationGOOGLE* pDisplayTimingProperties);
alias ProcGetRenderAreaGranularity = fn void(Device device, RenderPass renderPass, Extent2D* pGranularity);
alias ProcGetRenderingAreaGranularity = fn void(Device device, RenderingAreaInfo* pRenderingAreaInfo, Extent2D* pGranularity);
alias ProcGetRenderingAreaGranularityKHR = fn void(Device device, RenderingAreaInfo* pRenderingAreaInfo, Extent2D* pGranularity);
alias ProcGetSamplerOpaqueCaptureDescriptorDataEXT = fn Result(Device device, SamplerCaptureDescriptorDataInfoEXT* pInfo, void* pData);
alias ProcGetSemaphoreCounterValue = fn Result(Device device, Semaphore semaphore, ulong* pValue);
alias ProcGetSemaphoreCounterValueKHR = fn Result(Device device, Semaphore semaphore, ulong* pValue);
alias ProcGetSemaphoreFdKHR = fn Result(Device device, SemaphoreGetFdInfoKHR* pGetFdInfo, CInt* pFd);
alias ProcGetSemaphoreWin32HandleKHR = fn Result(Device device, SemaphoreGetWin32HandleInfoKHR* pGetWin32HandleInfo, Win32_HANDLE* pHandle);
alias ProcGetShaderBinaryDataEXT = fn Result(Device device, ShaderEXT shader, usz* pDataSize, void* pData);
alias ProcGetShaderInfoAMD = fn Result(Device device, Pipeline pipeline, ShaderStageFlags shaderStage, ShaderInfoTypeAMD infoType, usz* pInfoSize, void* pInfo);
alias ProcGetShaderModuleCreateInfoIdentifierEXT = fn void(Device device, ShaderModuleCreateInfo* pCreateInfo, ShaderModuleIdentifierEXT* pIdentifier);
alias ProcGetShaderModuleIdentifierEXT = fn void(Device device, ShaderModule shaderModule, ShaderModuleIdentifierEXT* pIdentifier);
alias ProcGetSwapchainCounterEXT = fn Result(Device device, SwapchainKHR swapchain, SurfaceCounterFlagsEXT counter, ulong* pCounterValue);
alias ProcGetSwapchainImagesKHR = fn Result(Device device, SwapchainKHR swapchain, uint* pSwapchainImageCount, Image* pSwapchainImages);
alias ProcGetSwapchainStatusKHR = fn Result(Device device, SwapchainKHR swapchain);
alias ProcGetValidationCacheDataEXT = fn Result(Device device, ValidationCacheEXT validationCache, usz* pDataSize, void* pData);
alias ProcGetVideoSessionMemoryRequirementsKHR = fn Result(Device device, VideoSessionKHR videoSession, uint* pMemoryRequirementsCount, VideoSessionMemoryRequirementsKHR* pMemoryRequirements);
alias ProcImportFenceFdKHR = fn Result(Device device, ImportFenceFdInfoKHR* pImportFenceFdInfo);
alias ProcImportFenceWin32HandleKHR = fn Result(Device device, ImportFenceWin32HandleInfoKHR* pImportFenceWin32HandleInfo);
alias ProcImportSemaphoreFdKHR = fn Result(Device device, ImportSemaphoreFdInfoKHR* pImportSemaphoreFdInfo);
alias ProcImportSemaphoreWin32HandleKHR = fn Result(Device device, ImportSemaphoreWin32HandleInfoKHR* pImportSemaphoreWin32HandleInfo);
alias ProcInitializePerformanceApiINTEL = fn Result(Device device, InitializePerformanceApiInfoINTEL* pInitializeInfo);
alias ProcInvalidateMappedMemoryRanges = fn Result(Device device, uint memoryRangeCount, MappedMemoryRange* pMemoryRanges);
alias ProcLatencySleepNV = fn Result(Device device, SwapchainKHR swapchain, LatencySleepInfoNV* pSleepInfo);
alias ProcMapMemory = fn Result(Device device, DeviceMemory memory, DeviceSize offset, DeviceSize size, MemoryMapFlags flags, void** ppData);
alias ProcMapMemory2 = fn Result(Device device, MemoryMapInfo* pMemoryMapInfo, void** ppData);
alias ProcMapMemory2KHR = fn Result(Device device, MemoryMapInfo* pMemoryMapInfo, void** ppData);
alias ProcMergePipelineCaches = fn Result(Device device, PipelineCache dstCache, uint srcCacheCount, PipelineCache* pSrcCaches);
alias ProcMergeValidationCachesEXT = fn Result(Device device, ValidationCacheEXT dstCache, uint srcCacheCount, ValidationCacheEXT* pSrcCaches);
alias ProcQueueBeginDebugUtilsLabelEXT = fn void(Queue queue, DebugUtilsLabelEXT* pLabelInfo);
alias ProcQueueBindSparse = fn Result(Queue queue, uint bindInfoCount, BindSparseInfo* pBindInfo, Fence fence);
alias ProcQueueEndDebugUtilsLabelEXT = fn void(Queue queue);
alias ProcQueueInsertDebugUtilsLabelEXT = fn void(Queue queue, DebugUtilsLabelEXT* pLabelInfo);
alias ProcQueueNotifyOutOfBandNV = fn void(Queue queue, OutOfBandQueueTypeInfoNV* pQueueTypeInfo);
alias ProcQueuePresentKHR = fn Result(Queue queue, PresentInfoKHR* pPresentInfo);
alias ProcQueueSetPerformanceConfigurationINTEL = fn Result(Queue queue, PerformanceConfigurationINTEL configuration);
alias ProcQueueSubmit = fn Result(Queue queue, uint submitCount, SubmitInfo* pSubmits, Fence fence);
alias ProcQueueSubmit2 = fn Result(Queue queue, uint submitCount, SubmitInfo2* pSubmits, Fence fence);
alias ProcQueueSubmit2KHR = fn Result(Queue queue, uint submitCount, SubmitInfo2* pSubmits, Fence fence);
alias ProcQueueWaitIdle = fn Result(Queue queue);
alias ProcRegisterDeviceEventEXT = fn Result(Device device, DeviceEventInfoEXT* pDeviceEventInfo, AllocationCallbacks* pAllocator, Fence* pFence);
alias ProcRegisterDisplayEventEXT = fn Result(Device device, DisplayKHR display, DisplayEventInfoEXT* pDisplayEventInfo, AllocationCallbacks* pAllocator, Fence* pFence);
alias ProcReleaseCapturedPipelineDataKHR = fn Result(Device device, ReleaseCapturedPipelineDataInfoKHR* pInfo, AllocationCallbacks* pAllocator);
alias ProcReleaseFullScreenExclusiveModeEXT = fn Result(Device device, SwapchainKHR swapchain);
alias ProcReleasePerformanceConfigurationINTEL = fn Result(Device device, PerformanceConfigurationINTEL configuration);
alias ProcReleaseProfilingLockKHR = fn void(Device device);
alias ProcReleaseSwapchainImagesEXT = fn Result(Device device, ReleaseSwapchainImagesInfoEXT* pReleaseInfo);
alias ProcResetCommandBuffer = fn Result(CommandBuffer commandBuffer, CommandBufferResetFlags flags);
alias ProcResetCommandPool = fn Result(Device device, CommandPool commandPool, CommandPoolResetFlags flags);
alias ProcResetDescriptorPool = fn Result(Device device, DescriptorPool descriptorPool, DescriptorPoolResetFlags flags);
alias ProcResetEvent = fn Result(Device device, Event event);
alias ProcResetFences = fn Result(Device device, uint fenceCount, Fence* pFences);
alias ProcResetQueryPool = fn void(Device device, QueryPool queryPool, uint firstQuery, uint queryCount);
alias ProcResetQueryPoolEXT = fn void(Device device, QueryPool queryPool, uint firstQuery, uint queryCount);
alias ProcSetDebugUtilsObjectNameEXT = fn Result(Device device, DebugUtilsObjectNameInfoEXT* pNameInfo);
alias ProcSetDebugUtilsObjectTagEXT = fn Result(Device device, DebugUtilsObjectTagInfoEXT* pTagInfo);
alias ProcSetDeviceMemoryPriorityEXT = fn void(Device device, DeviceMemory memory, float priority);
alias ProcSetEvent = fn Result(Device device, Event event);
alias ProcSetHdrMetadataEXT = fn void(Device device, uint swapchainCount, SwapchainKHR* pSwapchains, HdrMetadataEXT* pMetadata);
alias ProcSetLatencyMarkerNV = fn void(Device device, SwapchainKHR swapchain, SetLatencyMarkerInfoNV* pLatencyMarkerInfo);
alias ProcSetLatencySleepModeNV = fn Result(Device device, SwapchainKHR swapchain, LatencySleepModeInfoNV* pSleepModeInfo);
alias ProcSetLocalDimmingAMD = fn void(Device device, SwapchainKHR swapChain, uint localDimmingEnable);
alias ProcSetPrivateData = fn Result(Device device, ObjectType objectType, ulong objectHandle, PrivateDataSlot privateDataSlot, ulong data);
alias ProcSetPrivateDataEXT = fn Result(Device device, ObjectType objectType, ulong objectHandle, PrivateDataSlot privateDataSlot, ulong data);
alias ProcSignalSemaphore = fn Result(Device device, SemaphoreSignalInfo* pSignalInfo);
alias ProcSignalSemaphoreKHR = fn Result(Device device, SemaphoreSignalInfo* pSignalInfo);
alias ProcTransitionImageLayout = fn Result(Device device, uint transitionCount, HostImageLayoutTransitionInfo* pTransitions);
alias ProcTransitionImageLayoutEXT = fn Result(Device device, uint transitionCount, HostImageLayoutTransitionInfo* pTransitions);
alias ProcTrimCommandPool = fn void(Device device, CommandPool commandPool, CommandPoolTrimFlags flags);
alias ProcTrimCommandPoolKHR = fn void(Device device, CommandPool commandPool, CommandPoolTrimFlags flags);
alias ProcUninitializePerformanceApiINTEL = fn void(Device device);
alias ProcUnmapMemory = fn void(Device device, DeviceMemory memory);
alias ProcUnmapMemory2 = fn Result(Device device, MemoryUnmapInfo* pMemoryUnmapInfo);
alias ProcUnmapMemory2KHR = fn Result(Device device, MemoryUnmapInfo* pMemoryUnmapInfo);
alias ProcUpdateDescriptorSetWithTemplate = fn void(Device device, DescriptorSet descriptorSet, DescriptorUpdateTemplate descriptorUpdateTemplate, void* pData);
alias ProcUpdateDescriptorSetWithTemplateKHR = fn void(Device device, DescriptorSet descriptorSet, DescriptorUpdateTemplate descriptorUpdateTemplate, void* pData);
alias ProcUpdateDescriptorSets = fn void(Device device, uint descriptorWriteCount, WriteDescriptorSet* pDescriptorWrites, uint descriptorCopyCount, CopyDescriptorSet* pDescriptorCopies);
alias ProcUpdateIndirectExecutionSetPipelineEXT = fn void(Device device, IndirectExecutionSetEXT indirectExecutionSet, uint executionSetWriteCount, WriteIndirectExecutionSetPipelineEXT* pExecutionSetWrites);
alias ProcUpdateIndirectExecutionSetShaderEXT = fn void(Device device, IndirectExecutionSetEXT indirectExecutionSet, uint executionSetWriteCount, WriteIndirectExecutionSetShaderEXT* pExecutionSetWrites);
alias ProcUpdateVideoSessionParametersKHR = fn Result(Device device, VideoSessionParametersKHR videoSessionParameters, VideoSessionParametersUpdateInfoKHR* pUpdateInfo);
alias ProcWaitForFences = fn Result(Device device, uint fenceCount, Fence* pFences, uint waitAll, ulong timeout);
alias ProcWaitForPresentKHR = fn Result(Device device, SwapchainKHR swapchain, ulong presentId, ulong timeout);
alias ProcWaitSemaphores = fn Result(Device device, SemaphoreWaitInfo* pWaitInfo, ulong timeout);
alias ProcWaitSemaphoresKHR = fn Result(Device device, SemaphoreWaitInfo* pWaitInfo, ulong timeout);
alias ProcWriteAccelerationStructuresPropertiesKHR = fn Result(Device device, uint accelerationStructureCount, AccelerationStructureKHR* pAccelerationStructures, QueryType queryType, usz dataSize, void* pData, usz stride);
alias ProcWriteMicromapsPropertiesEXT = fn Result(Device device, uint micromapCount, MicromapEXT* pMicromaps, QueryType queryType, usz dataSize, void* pData, usz stride);

module vk::internal;
// Loader Procedures
ProcAllocationFunction                   allocationFunction;
ProcCreateInstance                       createInstance;
ProcDebugUtilsMessengerCallbackEXT       debugUtilsMessengerCallbackEXT;
ProcDeviceMemoryReportCallbackEXT        deviceMemoryReportCallbackEXT;
ProcEnumerateInstanceExtensionProperties enumerateInstanceExtensionProperties;
ProcEnumerateInstanceLayerProperties     enumerateInstanceLayerProperties;
ProcEnumerateInstanceVersion             enumerateInstanceVersion;
ProcFreeFunction                         freeFunction;
ProcGetInstanceProcAddr                  getInstanceProcAddr;
ProcInternalAllocationNotification       internalAllocationNotification;
ProcInternalFreeNotification             internalFreeNotification;
ProcReallocationFunction                 reallocationFunction;

// Instance Procedures
ProcAcquireDrmDisplayEXT                                             acquireDrmDisplayEXT;
ProcAcquireWinrtDisplayNV                                            acquireWinrtDisplayNV;
ProcCreateDebugReportCallbackEXT                                     createDebugReportCallbackEXT;
ProcCreateDebugUtilsMessengerEXT                                     createDebugUtilsMessengerEXT;
ProcCreateDevice                                                     createDevice;
ProcCreateDisplayModeKHR                                             createDisplayModeKHR;
ProcCreateDisplayPlaneSurfaceKHR                                     createDisplayPlaneSurfaceKHR;
ProcCreateHeadlessSurfaceEXT                                         createHeadlessSurfaceEXT;
ProcCreateIOSSurfaceMVK                                              createIOSSurfaceMVK;
ProcCreateMacOSSurfaceMVK                                            createMacOSSurfaceMVK;
ProcCreateMetalSurfaceEXT                                            createMetalSurfaceEXT;
ProcCreateWaylandSurfaceKHR                                          createWaylandSurfaceKHR;
ProcCreateWin32SurfaceKHR                                            createWin32SurfaceKHR;
ProcCreateXcbSurfaceKHR                                              createXcbSurfaceKHR;
ProcCreateXlibSurfaceKHR                                             createXlibSurfaceKHR;
ProcDebugReportMessageEXT                                            debugReportMessageEXT;
ProcDestroyDebugReportCallbackEXT                                    destroyDebugReportCallbackEXT;
ProcDestroyDebugUtilsMessengerEXT                                    destroyDebugUtilsMessengerEXT;
ProcDestroyInstance                                                  destroyInstance;
ProcDestroySurfaceKHR                                                destroySurfaceKHR;
ProcEnumerateDeviceExtensionProperties                               enumerateDeviceExtensionProperties;
ProcEnumerateDeviceLayerProperties                                   enumerateDeviceLayerProperties;
ProcEnumeratePhysicalDeviceGroups                                    enumeratePhysicalDeviceGroups;
ProcEnumeratePhysicalDeviceGroupsKHR                                 enumeratePhysicalDeviceGroupsKHR;
ProcEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR    enumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR;
ProcEnumeratePhysicalDevices                                         enumeratePhysicalDevices;
ProcGetDisplayModeProperties2KHR                                     getDisplayModeProperties2KHR;
ProcGetDisplayModePropertiesKHR                                      getDisplayModePropertiesKHR;
ProcGetDisplayPlaneCapabilities2KHR                                  getDisplayPlaneCapabilities2KHR;
ProcGetDisplayPlaneCapabilitiesKHR                                   getDisplayPlaneCapabilitiesKHR;
ProcGetDisplayPlaneSupportedDisplaysKHR                              getDisplayPlaneSupportedDisplaysKHR;
ProcGetDrmDisplayEXT                                                 getDrmDisplayEXT;
ProcGetInstanceProcAddrLUNARG                                        getInstanceProcAddrLUNARG;
ProcGetPhysicalDeviceCalibrateableTimeDomainsEXT                     getPhysicalDeviceCalibrateableTimeDomainsEXT;
ProcGetPhysicalDeviceCalibrateableTimeDomainsKHR                     getPhysicalDeviceCalibrateableTimeDomainsKHR;
ProcGetPhysicalDeviceCooperativeMatrixFlexibleDimensionsPropertiesNV getPhysicalDeviceCooperativeMatrixFlexibleDimensionsPropertiesNV;
ProcGetPhysicalDeviceCooperativeMatrixPropertiesKHR                  getPhysicalDeviceCooperativeMatrixPropertiesKHR;
ProcGetPhysicalDeviceCooperativeMatrixPropertiesNV                   getPhysicalDeviceCooperativeMatrixPropertiesNV;
ProcGetPhysicalDeviceCooperativeVectorPropertiesNV                   getPhysicalDeviceCooperativeVectorPropertiesNV;
ProcGetPhysicalDeviceDisplayPlaneProperties2KHR                      getPhysicalDeviceDisplayPlaneProperties2KHR;
ProcGetPhysicalDeviceDisplayPlanePropertiesKHR                       getPhysicalDeviceDisplayPlanePropertiesKHR;
ProcGetPhysicalDeviceDisplayProperties2KHR                           getPhysicalDeviceDisplayProperties2KHR;
ProcGetPhysicalDeviceDisplayPropertiesKHR                            getPhysicalDeviceDisplayPropertiesKHR;
ProcGetPhysicalDeviceExternalBufferProperties                        getPhysicalDeviceExternalBufferProperties;
ProcGetPhysicalDeviceExternalBufferPropertiesKHR                     getPhysicalDeviceExternalBufferPropertiesKHR;
ProcGetPhysicalDeviceExternalFenceProperties                         getPhysicalDeviceExternalFenceProperties;
ProcGetPhysicalDeviceExternalFencePropertiesKHR                      getPhysicalDeviceExternalFencePropertiesKHR;
ProcGetPhysicalDeviceExternalImageFormatPropertiesNV                 getPhysicalDeviceExternalImageFormatPropertiesNV;
ProcGetPhysicalDeviceExternalSemaphoreProperties                     getPhysicalDeviceExternalSemaphoreProperties;
ProcGetPhysicalDeviceExternalSemaphorePropertiesKHR                  getPhysicalDeviceExternalSemaphorePropertiesKHR;
ProcGetPhysicalDeviceFeatures                                        getPhysicalDeviceFeatures;
ProcGetPhysicalDeviceFeatures2                                       getPhysicalDeviceFeatures2;
ProcGetPhysicalDeviceFeatures2KHR                                    getPhysicalDeviceFeatures2KHR;
ProcGetPhysicalDeviceFormatProperties                                getPhysicalDeviceFormatProperties;
ProcGetPhysicalDeviceFormatProperties2                               getPhysicalDeviceFormatProperties2;
ProcGetPhysicalDeviceFormatProperties2KHR                            getPhysicalDeviceFormatProperties2KHR;
ProcGetPhysicalDeviceFragmentShadingRatesKHR                         getPhysicalDeviceFragmentShadingRatesKHR;
ProcGetPhysicalDeviceImageFormatProperties                           getPhysicalDeviceImageFormatProperties;
ProcGetPhysicalDeviceImageFormatProperties2                          getPhysicalDeviceImageFormatProperties2;
ProcGetPhysicalDeviceImageFormatProperties2KHR                       getPhysicalDeviceImageFormatProperties2KHR;
ProcGetPhysicalDeviceMemoryProperties                                getPhysicalDeviceMemoryProperties;
ProcGetPhysicalDeviceMemoryProperties2                               getPhysicalDeviceMemoryProperties2;
ProcGetPhysicalDeviceMemoryProperties2KHR                            getPhysicalDeviceMemoryProperties2KHR;
ProcGetPhysicalDeviceMultisamplePropertiesEXT                        getPhysicalDeviceMultisamplePropertiesEXT;
ProcGetPhysicalDeviceOpticalFlowImageFormatsNV                       getPhysicalDeviceOpticalFlowImageFormatsNV;
ProcGetPhysicalDevicePresentRectanglesKHR                            getPhysicalDevicePresentRectanglesKHR;
ProcGetPhysicalDeviceProperties                                      getPhysicalDeviceProperties;
ProcGetPhysicalDeviceProperties2                                     getPhysicalDeviceProperties2;
ProcGetPhysicalDeviceProperties2KHR                                  getPhysicalDeviceProperties2KHR;
ProcGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR            getPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR;
ProcGetPhysicalDeviceQueueFamilyProperties                           getPhysicalDeviceQueueFamilyProperties;
ProcGetPhysicalDeviceQueueFamilyProperties2                          getPhysicalDeviceQueueFamilyProperties2;
ProcGetPhysicalDeviceQueueFamilyProperties2KHR                       getPhysicalDeviceQueueFamilyProperties2KHR;
ProcGetPhysicalDeviceSparseImageFormatProperties                     getPhysicalDeviceSparseImageFormatProperties;
ProcGetPhysicalDeviceSparseImageFormatProperties2                    getPhysicalDeviceSparseImageFormatProperties2;
ProcGetPhysicalDeviceSparseImageFormatProperties2KHR                 getPhysicalDeviceSparseImageFormatProperties2KHR;
ProcGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV  getPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV;
ProcGetPhysicalDeviceSurfaceCapabilities2EXT                         getPhysicalDeviceSurfaceCapabilities2EXT;
ProcGetPhysicalDeviceSurfaceCapabilities2KHR                         getPhysicalDeviceSurfaceCapabilities2KHR;
ProcGetPhysicalDeviceSurfaceCapabilitiesKHR                          getPhysicalDeviceSurfaceCapabilitiesKHR;
ProcGetPhysicalDeviceSurfaceFormats2KHR                              getPhysicalDeviceSurfaceFormats2KHR;
ProcGetPhysicalDeviceSurfaceFormatsKHR                               getPhysicalDeviceSurfaceFormatsKHR;
ProcGetPhysicalDeviceSurfacePresentModes2EXT                         getPhysicalDeviceSurfacePresentModes2EXT;
ProcGetPhysicalDeviceSurfacePresentModesKHR                          getPhysicalDeviceSurfacePresentModesKHR;
ProcGetPhysicalDeviceSurfaceSupportKHR                               getPhysicalDeviceSurfaceSupportKHR;
ProcGetPhysicalDeviceToolProperties                                  getPhysicalDeviceToolProperties;
ProcGetPhysicalDeviceToolPropertiesEXT                               getPhysicalDeviceToolPropertiesEXT;
ProcGetPhysicalDeviceVideoCapabilitiesKHR                            getPhysicalDeviceVideoCapabilitiesKHR;
ProcGetPhysicalDeviceVideoEncodeQualityLevelPropertiesKHR            getPhysicalDeviceVideoEncodeQualityLevelPropertiesKHR;
ProcGetPhysicalDeviceVideoFormatPropertiesKHR                        getPhysicalDeviceVideoFormatPropertiesKHR;
ProcGetPhysicalDeviceWaylandPresentationSupportKHR                   getPhysicalDeviceWaylandPresentationSupportKHR;
ProcGetPhysicalDeviceWin32PresentationSupportKHR                     getPhysicalDeviceWin32PresentationSupportKHR;
ProcGetPhysicalDeviceXcbPresentationSupportKHR                       getPhysicalDeviceXcbPresentationSupportKHR;
ProcGetPhysicalDeviceXlibPresentationSupportKHR                      getPhysicalDeviceXlibPresentationSupportKHR;
ProcGetWinrtDisplayNV                                                getWinrtDisplayNV;
ProcReleaseDisplayEXT                                                releaseDisplayEXT;
ProcSubmitDebugUtilsMessageEXT                                       submitDebugUtilsMessageEXT;

// Device Procedures
ProcAcquireFullScreenExclusiveModeEXT                      acquireFullScreenExclusiveModeEXT;
ProcAcquireNextImage2KHR                                   acquireNextImage2KHR;
ProcAcquireNextImageKHR                                    acquireNextImageKHR;
ProcAcquirePerformanceConfigurationINTEL                   acquirePerformanceConfigurationINTEL;
ProcAcquireProfilingLockKHR                                acquireProfilingLockKHR;
ProcAllocateCommandBuffers                                 allocateCommandBuffers;
ProcAllocateDescriptorSets                                 allocateDescriptorSets;
ProcAllocateMemory                                         allocateMemory;
ProcAntiLagUpdateAMD                                       antiLagUpdateAMD;
ProcBeginCommandBuffer                                     beginCommandBuffer;
ProcBindAccelerationStructureMemoryNV                      bindAccelerationStructureMemoryNV;
ProcBindBufferMemory                                       bindBufferMemory;
ProcBindBufferMemory2                                      bindBufferMemory2;
ProcBindBufferMemory2KHR                                   bindBufferMemory2KHR;
ProcBindImageMemory                                        bindImageMemory;
ProcBindImageMemory2                                       bindImageMemory2;
ProcBindImageMemory2KHR                                    bindImageMemory2KHR;
ProcBindOpticalFlowSessionImageNV                          bindOpticalFlowSessionImageNV;
ProcBindVideoSessionMemoryKHR                              bindVideoSessionMemoryKHR;
ProcBuildAccelerationStructuresKHR                         buildAccelerationStructuresKHR;
ProcBuildMicromapsEXT                                      buildMicromapsEXT;
ProcCmdBeginConditionalRenderingEXT                        cmdBeginConditionalRenderingEXT;
ProcCmdBeginDebugUtilsLabelEXT                             cmdBeginDebugUtilsLabelEXT;
ProcCmdBeginQuery                                          cmdBeginQuery;
ProcCmdBeginQueryIndexedEXT                                cmdBeginQueryIndexedEXT;
ProcCmdBeginRenderPass                                     cmdBeginRenderPass;
ProcCmdBeginRenderPass2                                    cmdBeginRenderPass2;
ProcCmdBeginRenderPass2KHR                                 cmdBeginRenderPass2KHR;
ProcCmdBeginRendering                                      cmdBeginRendering;
ProcCmdBeginRenderingKHR                                   cmdBeginRenderingKHR;
ProcCmdBeginTransformFeedbackEXT                           cmdBeginTransformFeedbackEXT;
ProcCmdBeginVideoCodingKHR                                 cmdBeginVideoCodingKHR;
ProcCmdBindDescriptorBufferEmbeddedSamplers2EXT            cmdBindDescriptorBufferEmbeddedSamplers2EXT;
ProcCmdBindDescriptorBufferEmbeddedSamplersEXT             cmdBindDescriptorBufferEmbeddedSamplersEXT;
ProcCmdBindDescriptorBuffersEXT                            cmdBindDescriptorBuffersEXT;
ProcCmdBindDescriptorSets                                  cmdBindDescriptorSets;
ProcCmdBindDescriptorSets2                                 cmdBindDescriptorSets2;
ProcCmdBindDescriptorSets2KHR                              cmdBindDescriptorSets2KHR;
ProcCmdBindIndexBuffer                                     cmdBindIndexBuffer;
ProcCmdBindIndexBuffer2                                    cmdBindIndexBuffer2;
ProcCmdBindIndexBuffer2KHR                                 cmdBindIndexBuffer2KHR;
ProcCmdBindInvocationMaskHUAWEI                            cmdBindInvocationMaskHUAWEI;
ProcCmdBindPipeline                                        cmdBindPipeline;
ProcCmdBindPipelineShaderGroupNV                           cmdBindPipelineShaderGroupNV;
ProcCmdBindShadersEXT                                      cmdBindShadersEXT;
ProcCmdBindShadingRateImageNV                              cmdBindShadingRateImageNV;
ProcCmdBindTransformFeedbackBuffersEXT                     cmdBindTransformFeedbackBuffersEXT;
ProcCmdBindVertexBuffers                                   cmdBindVertexBuffers;
ProcCmdBindVertexBuffers2                                  cmdBindVertexBuffers2;
ProcCmdBindVertexBuffers2EXT                               cmdBindVertexBuffers2EXT;
ProcCmdBlitImage                                           cmdBlitImage;
ProcCmdBlitImage2                                          cmdBlitImage2;
ProcCmdBlitImage2KHR                                       cmdBlitImage2KHR;
ProcCmdBuildAccelerationStructureNV                        cmdBuildAccelerationStructureNV;
ProcCmdBuildAccelerationStructuresIndirectKHR              cmdBuildAccelerationStructuresIndirectKHR;
ProcCmdBuildAccelerationStructuresKHR                      cmdBuildAccelerationStructuresKHR;
ProcCmdBuildClusterAccelerationStructureIndirectNV         cmdBuildClusterAccelerationStructureIndirectNV;
ProcCmdBuildMicromapsEXT                                   cmdBuildMicromapsEXT;
ProcCmdBuildPartitionedAccelerationStructuresNV            cmdBuildPartitionedAccelerationStructuresNV;
ProcCmdClearAttachments                                    cmdClearAttachments;
ProcCmdClearColorImage                                     cmdClearColorImage;
ProcCmdClearDepthStencilImage                              cmdClearDepthStencilImage;
ProcCmdControlVideoCodingKHR                               cmdControlVideoCodingKHR;
ProcCmdConvertCooperativeVectorMatrixNV                    cmdConvertCooperativeVectorMatrixNV;
ProcCmdCopyAccelerationStructureKHR                        cmdCopyAccelerationStructureKHR;
ProcCmdCopyAccelerationStructureNV                         cmdCopyAccelerationStructureNV;
ProcCmdCopyAccelerationStructureToMemoryKHR                cmdCopyAccelerationStructureToMemoryKHR;
ProcCmdCopyBuffer                                          cmdCopyBuffer;
ProcCmdCopyBuffer2                                         cmdCopyBuffer2;
ProcCmdCopyBuffer2KHR                                      cmdCopyBuffer2KHR;
ProcCmdCopyBufferToImage                                   cmdCopyBufferToImage;
ProcCmdCopyBufferToImage2                                  cmdCopyBufferToImage2;
ProcCmdCopyBufferToImage2KHR                               cmdCopyBufferToImage2KHR;
ProcCmdCopyImage                                           cmdCopyImage;
ProcCmdCopyImage2                                          cmdCopyImage2;
ProcCmdCopyImage2KHR                                       cmdCopyImage2KHR;
ProcCmdCopyImageToBuffer                                   cmdCopyImageToBuffer;
ProcCmdCopyImageToBuffer2                                  cmdCopyImageToBuffer2;
ProcCmdCopyImageToBuffer2KHR                               cmdCopyImageToBuffer2KHR;
ProcCmdCopyMemoryIndirectNV                                cmdCopyMemoryIndirectNV;
ProcCmdCopyMemoryToAccelerationStructureKHR                cmdCopyMemoryToAccelerationStructureKHR;
ProcCmdCopyMemoryToImageIndirectNV                         cmdCopyMemoryToImageIndirectNV;
ProcCmdCopyMemoryToMicromapEXT                             cmdCopyMemoryToMicromapEXT;
ProcCmdCopyMicromapEXT                                     cmdCopyMicromapEXT;
ProcCmdCopyMicromapToMemoryEXT                             cmdCopyMicromapToMemoryEXT;
ProcCmdCopyQueryPoolResults                                cmdCopyQueryPoolResults;
ProcCmdCuLaunchKernelNVX                                   cmdCuLaunchKernelNVX;
ProcCmdCudaLaunchKernelNV                                  cmdCudaLaunchKernelNV;
ProcCmdDebugMarkerBeginEXT                                 cmdDebugMarkerBeginEXT;
ProcCmdDebugMarkerEndEXT                                   cmdDebugMarkerEndEXT;
ProcCmdDebugMarkerInsertEXT                                cmdDebugMarkerInsertEXT;
ProcCmdDecodeVideoKHR                                      cmdDecodeVideoKHR;
ProcCmdDecompressMemoryIndirectCountNV                     cmdDecompressMemoryIndirectCountNV;
ProcCmdDecompressMemoryNV                                  cmdDecompressMemoryNV;
ProcCmdDispatch                                            cmdDispatch;
ProcCmdDispatchBase                                        cmdDispatchBase;
ProcCmdDispatchBaseKHR                                     cmdDispatchBaseKHR;
ProcCmdDispatchIndirect                                    cmdDispatchIndirect;
ProcCmdDraw                                                cmdDraw;
ProcCmdDrawClusterHUAWEI                                   cmdDrawClusterHUAWEI;
ProcCmdDrawClusterIndirectHUAWEI                           cmdDrawClusterIndirectHUAWEI;
ProcCmdDrawIndexed                                         cmdDrawIndexed;
ProcCmdDrawIndexedIndirect                                 cmdDrawIndexedIndirect;
ProcCmdDrawIndexedIndirectCount                            cmdDrawIndexedIndirectCount;
ProcCmdDrawIndexedIndirectCountAMD                         cmdDrawIndexedIndirectCountAMD;
ProcCmdDrawIndexedIndirectCountKHR                         cmdDrawIndexedIndirectCountKHR;
ProcCmdDrawIndirect                                        cmdDrawIndirect;
ProcCmdDrawIndirectByteCountEXT                            cmdDrawIndirectByteCountEXT;
ProcCmdDrawIndirectCount                                   cmdDrawIndirectCount;
ProcCmdDrawIndirectCountAMD                                cmdDrawIndirectCountAMD;
ProcCmdDrawIndirectCountKHR                                cmdDrawIndirectCountKHR;
ProcCmdDrawMeshTasksEXT                                    cmdDrawMeshTasksEXT;
ProcCmdDrawMeshTasksIndirectCountEXT                       cmdDrawMeshTasksIndirectCountEXT;
ProcCmdDrawMeshTasksIndirectCountNV                        cmdDrawMeshTasksIndirectCountNV;
ProcCmdDrawMeshTasksIndirectEXT                            cmdDrawMeshTasksIndirectEXT;
ProcCmdDrawMeshTasksIndirectNV                             cmdDrawMeshTasksIndirectNV;
ProcCmdDrawMeshTasksNV                                     cmdDrawMeshTasksNV;
ProcCmdDrawMultiEXT                                        cmdDrawMultiEXT;
ProcCmdDrawMultiIndexedEXT                                 cmdDrawMultiIndexedEXT;
ProcCmdEncodeVideoKHR                                      cmdEncodeVideoKHR;
ProcCmdEndConditionalRenderingEXT                          cmdEndConditionalRenderingEXT;
ProcCmdEndDebugUtilsLabelEXT                               cmdEndDebugUtilsLabelEXT;
ProcCmdEndQuery                                            cmdEndQuery;
ProcCmdEndQueryIndexedEXT                                  cmdEndQueryIndexedEXT;
ProcCmdEndRenderPass                                       cmdEndRenderPass;
ProcCmdEndRenderPass2                                      cmdEndRenderPass2;
ProcCmdEndRenderPass2KHR                                   cmdEndRenderPass2KHR;
ProcCmdEndRendering                                        cmdEndRendering;
ProcCmdEndRenderingKHR                                     cmdEndRenderingKHR;
ProcCmdEndTransformFeedbackEXT                             cmdEndTransformFeedbackEXT;
ProcCmdEndVideoCodingKHR                                   cmdEndVideoCodingKHR;
ProcCmdExecuteCommands                                     cmdExecuteCommands;
ProcCmdExecuteGeneratedCommandsEXT                         cmdExecuteGeneratedCommandsEXT;
ProcCmdExecuteGeneratedCommandsNV                          cmdExecuteGeneratedCommandsNV;
ProcCmdFillBuffer                                          cmdFillBuffer;
ProcCmdInsertDebugUtilsLabelEXT                            cmdInsertDebugUtilsLabelEXT;
ProcCmdNextSubpass                                         cmdNextSubpass;
ProcCmdNextSubpass2                                        cmdNextSubpass2;
ProcCmdNextSubpass2KHR                                     cmdNextSubpass2KHR;
ProcCmdOpticalFlowExecuteNV                                cmdOpticalFlowExecuteNV;
ProcCmdPipelineBarrier                                     cmdPipelineBarrier;
ProcCmdPipelineBarrier2                                    cmdPipelineBarrier2;
ProcCmdPipelineBarrier2KHR                                 cmdPipelineBarrier2KHR;
ProcCmdPreprocessGeneratedCommandsEXT                      cmdPreprocessGeneratedCommandsEXT;
ProcCmdPreprocessGeneratedCommandsNV                       cmdPreprocessGeneratedCommandsNV;
ProcCmdPushConstants                                       cmdPushConstants;
ProcCmdPushConstants2                                      cmdPushConstants2;
ProcCmdPushConstants2KHR                                   cmdPushConstants2KHR;
ProcCmdPushDescriptorSet                                   cmdPushDescriptorSet;
ProcCmdPushDescriptorSet2                                  cmdPushDescriptorSet2;
ProcCmdPushDescriptorSet2KHR                               cmdPushDescriptorSet2KHR;
ProcCmdPushDescriptorSetKHR                                cmdPushDescriptorSetKHR;
ProcCmdPushDescriptorSetWithTemplate                       cmdPushDescriptorSetWithTemplate;
ProcCmdPushDescriptorSetWithTemplate2                      cmdPushDescriptorSetWithTemplate2;
ProcCmdPushDescriptorSetWithTemplate2KHR                   cmdPushDescriptorSetWithTemplate2KHR;
ProcCmdPushDescriptorSetWithTemplateKHR                    cmdPushDescriptorSetWithTemplateKHR;
ProcCmdResetEvent                                          cmdResetEvent;
ProcCmdResetEvent2                                         cmdResetEvent2;
ProcCmdResetEvent2KHR                                      cmdResetEvent2KHR;
ProcCmdResetQueryPool                                      cmdResetQueryPool;
ProcCmdResolveImage                                        cmdResolveImage;
ProcCmdResolveImage2                                       cmdResolveImage2;
ProcCmdResolveImage2KHR                                    cmdResolveImage2KHR;
ProcCmdSetAlphaToCoverageEnableEXT                         cmdSetAlphaToCoverageEnableEXT;
ProcCmdSetAlphaToOneEnableEXT                              cmdSetAlphaToOneEnableEXT;
ProcCmdSetAttachmentFeedbackLoopEnableEXT                  cmdSetAttachmentFeedbackLoopEnableEXT;
ProcCmdSetBlendConstants                                   cmdSetBlendConstants;
ProcCmdSetCheckpointNV                                     cmdSetCheckpointNV;
ProcCmdSetCoarseSampleOrderNV                              cmdSetCoarseSampleOrderNV;
ProcCmdSetColorBlendAdvancedEXT                            cmdSetColorBlendAdvancedEXT;
ProcCmdSetColorBlendEnableEXT                              cmdSetColorBlendEnableEXT;
ProcCmdSetColorBlendEquationEXT                            cmdSetColorBlendEquationEXT;
ProcCmdSetColorWriteMaskEXT                                cmdSetColorWriteMaskEXT;
ProcCmdSetConservativeRasterizationModeEXT                 cmdSetConservativeRasterizationModeEXT;
ProcCmdSetCoverageModulationModeNV                         cmdSetCoverageModulationModeNV;
ProcCmdSetCoverageModulationTableEnableNV                  cmdSetCoverageModulationTableEnableNV;
ProcCmdSetCoverageModulationTableNV                        cmdSetCoverageModulationTableNV;
ProcCmdSetCoverageReductionModeNV                          cmdSetCoverageReductionModeNV;
ProcCmdSetCoverageToColorEnableNV                          cmdSetCoverageToColorEnableNV;
ProcCmdSetCoverageToColorLocationNV                        cmdSetCoverageToColorLocationNV;
ProcCmdSetCullMode                                         cmdSetCullMode;
ProcCmdSetCullModeEXT                                      cmdSetCullModeEXT;
ProcCmdSetDepthBias                                        cmdSetDepthBias;
ProcCmdSetDepthBias2EXT                                    cmdSetDepthBias2EXT;
ProcCmdSetDepthBiasEnable                                  cmdSetDepthBiasEnable;
ProcCmdSetDepthBiasEnableEXT                               cmdSetDepthBiasEnableEXT;
ProcCmdSetDepthBounds                                      cmdSetDepthBounds;
ProcCmdSetDepthBoundsTestEnable                            cmdSetDepthBoundsTestEnable;
ProcCmdSetDepthBoundsTestEnableEXT                         cmdSetDepthBoundsTestEnableEXT;
ProcCmdSetDepthClampEnableEXT                              cmdSetDepthClampEnableEXT;
ProcCmdSetDepthClampRangeEXT                               cmdSetDepthClampRangeEXT;
ProcCmdSetDepthClipEnableEXT                               cmdSetDepthClipEnableEXT;
ProcCmdSetDepthClipNegativeOneToOneEXT                     cmdSetDepthClipNegativeOneToOneEXT;
ProcCmdSetDepthCompareOp                                   cmdSetDepthCompareOp;
ProcCmdSetDepthCompareOpEXT                                cmdSetDepthCompareOpEXT;
ProcCmdSetDepthTestEnable                                  cmdSetDepthTestEnable;
ProcCmdSetDepthTestEnableEXT                               cmdSetDepthTestEnableEXT;
ProcCmdSetDepthWriteEnable                                 cmdSetDepthWriteEnable;
ProcCmdSetDepthWriteEnableEXT                              cmdSetDepthWriteEnableEXT;
ProcCmdSetDescriptorBufferOffsets2EXT                      cmdSetDescriptorBufferOffsets2EXT;
ProcCmdSetDescriptorBufferOffsetsEXT                       cmdSetDescriptorBufferOffsetsEXT;
ProcCmdSetDeviceMask                                       cmdSetDeviceMask;
ProcCmdSetDeviceMaskKHR                                    cmdSetDeviceMaskKHR;
ProcCmdSetDiscardRectangleEXT                              cmdSetDiscardRectangleEXT;
ProcCmdSetDiscardRectangleEnableEXT                        cmdSetDiscardRectangleEnableEXT;
ProcCmdSetDiscardRectangleModeEXT                          cmdSetDiscardRectangleModeEXT;
ProcCmdSetEvent                                            cmdSetEvent;
ProcCmdSetEvent2                                           cmdSetEvent2;
ProcCmdSetEvent2KHR                                        cmdSetEvent2KHR;
ProcCmdSetExclusiveScissorEnableNV                         cmdSetExclusiveScissorEnableNV;
ProcCmdSetExclusiveScissorNV                               cmdSetExclusiveScissorNV;
ProcCmdSetExtraPrimitiveOverestimationSizeEXT              cmdSetExtraPrimitiveOverestimationSizeEXT;
ProcCmdSetFragmentShadingRateEnumNV                        cmdSetFragmentShadingRateEnumNV;
ProcCmdSetFragmentShadingRateKHR                           cmdSetFragmentShadingRateKHR;
ProcCmdSetFrontFace                                        cmdSetFrontFace;
ProcCmdSetFrontFaceEXT                                     cmdSetFrontFaceEXT;
ProcCmdSetLineRasterizationModeEXT                         cmdSetLineRasterizationModeEXT;
ProcCmdSetLineStipple                                      cmdSetLineStipple;
ProcCmdSetLineStippleEXT                                   cmdSetLineStippleEXT;
ProcCmdSetLineStippleEnableEXT                             cmdSetLineStippleEnableEXT;
ProcCmdSetLineStippleKHR                                   cmdSetLineStippleKHR;
ProcCmdSetLineWidth                                        cmdSetLineWidth;
ProcCmdSetLogicOpEXT                                       cmdSetLogicOpEXT;
ProcCmdSetLogicOpEnableEXT                                 cmdSetLogicOpEnableEXT;
ProcCmdSetPatchControlPointsEXT                            cmdSetPatchControlPointsEXT;
ProcCmdSetPerformanceMarkerINTEL                           cmdSetPerformanceMarkerINTEL;
ProcCmdSetPerformanceOverrideINTEL                         cmdSetPerformanceOverrideINTEL;
ProcCmdSetPerformanceStreamMarkerINTEL                     cmdSetPerformanceStreamMarkerINTEL;
ProcCmdSetPolygonModeEXT                                   cmdSetPolygonModeEXT;
ProcCmdSetPrimitiveRestartEnable                           cmdSetPrimitiveRestartEnable;
ProcCmdSetPrimitiveRestartEnableEXT                        cmdSetPrimitiveRestartEnableEXT;
ProcCmdSetPrimitiveTopology                                cmdSetPrimitiveTopology;
ProcCmdSetPrimitiveTopologyEXT                             cmdSetPrimitiveTopologyEXT;
ProcCmdSetProvokingVertexModeEXT                           cmdSetProvokingVertexModeEXT;
ProcCmdSetRasterizationSamplesEXT                          cmdSetRasterizationSamplesEXT;
ProcCmdSetRasterizationStreamEXT                           cmdSetRasterizationStreamEXT;
ProcCmdSetRasterizerDiscardEnable                          cmdSetRasterizerDiscardEnable;
ProcCmdSetRasterizerDiscardEnableEXT                       cmdSetRasterizerDiscardEnableEXT;
ProcCmdSetRayTracingPipelineStackSizeKHR                   cmdSetRayTracingPipelineStackSizeKHR;
ProcCmdSetRenderingAttachmentLocations                     cmdSetRenderingAttachmentLocations;
ProcCmdSetRenderingAttachmentLocationsKHR                  cmdSetRenderingAttachmentLocationsKHR;
ProcCmdSetRenderingInputAttachmentIndices                  cmdSetRenderingInputAttachmentIndices;
ProcCmdSetRenderingInputAttachmentIndicesKHR               cmdSetRenderingInputAttachmentIndicesKHR;
ProcCmdSetRepresentativeFragmentTestEnableNV               cmdSetRepresentativeFragmentTestEnableNV;
ProcCmdSetSampleLocationsEXT                               cmdSetSampleLocationsEXT;
ProcCmdSetSampleLocationsEnableEXT                         cmdSetSampleLocationsEnableEXT;
ProcCmdSetSampleMaskEXT                                    cmdSetSampleMaskEXT;
ProcCmdSetScissor                                          cmdSetScissor;
ProcCmdSetScissorWithCount                                 cmdSetScissorWithCount;
ProcCmdSetScissorWithCountEXT                              cmdSetScissorWithCountEXT;
ProcCmdSetShadingRateImageEnableNV                         cmdSetShadingRateImageEnableNV;
ProcCmdSetStencilCompareMask                               cmdSetStencilCompareMask;
ProcCmdSetStencilOp                                        cmdSetStencilOp;
ProcCmdSetStencilOpEXT                                     cmdSetStencilOpEXT;
ProcCmdSetStencilReference                                 cmdSetStencilReference;
ProcCmdSetStencilTestEnable                                cmdSetStencilTestEnable;
ProcCmdSetStencilTestEnableEXT                             cmdSetStencilTestEnableEXT;
ProcCmdSetStencilWriteMask                                 cmdSetStencilWriteMask;
ProcCmdSetTessellationDomainOriginEXT                      cmdSetTessellationDomainOriginEXT;
ProcCmdSetVertexInputEXT                                   cmdSetVertexInputEXT;
ProcCmdSetViewport                                         cmdSetViewport;
ProcCmdSetViewportShadingRatePaletteNV                     cmdSetViewportShadingRatePaletteNV;
ProcCmdSetViewportSwizzleNV                                cmdSetViewportSwizzleNV;
ProcCmdSetViewportWScalingEnableNV                         cmdSetViewportWScalingEnableNV;
ProcCmdSetViewportWScalingNV                               cmdSetViewportWScalingNV;
ProcCmdSetViewportWithCount                                cmdSetViewportWithCount;
ProcCmdSetViewportWithCountEXT                             cmdSetViewportWithCountEXT;
ProcCmdSubpassShadingHUAWEI                                cmdSubpassShadingHUAWEI;
ProcCmdTraceRaysIndirect2KHR                               cmdTraceRaysIndirect2KHR;
ProcCmdTraceRaysIndirectKHR                                cmdTraceRaysIndirectKHR;
ProcCmdTraceRaysKHR                                        cmdTraceRaysKHR;
ProcCmdTraceRaysNV                                         cmdTraceRaysNV;
ProcCmdUpdateBuffer                                        cmdUpdateBuffer;
ProcCmdUpdatePipelineIndirectBufferNV                      cmdUpdatePipelineIndirectBufferNV;
ProcCmdWaitEvents                                          cmdWaitEvents;
ProcCmdWaitEvents2                                         cmdWaitEvents2;
ProcCmdWaitEvents2KHR                                      cmdWaitEvents2KHR;
ProcCmdWriteAccelerationStructuresPropertiesKHR            cmdWriteAccelerationStructuresPropertiesKHR;
ProcCmdWriteAccelerationStructuresPropertiesNV             cmdWriteAccelerationStructuresPropertiesNV;
ProcCmdWriteBufferMarker2AMD                               cmdWriteBufferMarker2AMD;
ProcCmdWriteBufferMarkerAMD                                cmdWriteBufferMarkerAMD;
ProcCmdWriteMicromapsPropertiesEXT                         cmdWriteMicromapsPropertiesEXT;
ProcCmdWriteTimestamp                                      cmdWriteTimestamp;
ProcCmdWriteTimestamp2                                     cmdWriteTimestamp2;
ProcCmdWriteTimestamp2KHR                                  cmdWriteTimestamp2KHR;
ProcCompileDeferredNV                                      compileDeferredNV;
ProcConvertCooperativeVectorMatrixNV                       convertCooperativeVectorMatrixNV;
ProcCopyAccelerationStructureKHR                           copyAccelerationStructureKHR;
ProcCopyAccelerationStructureToMemoryKHR                   copyAccelerationStructureToMemoryKHR;
ProcCopyImageToImage                                       copyImageToImage;
ProcCopyImageToImageEXT                                    copyImageToImageEXT;
ProcCopyImageToMemory                                      copyImageToMemory;
ProcCopyImageToMemoryEXT                                   copyImageToMemoryEXT;
ProcCopyMemoryToAccelerationStructureKHR                   copyMemoryToAccelerationStructureKHR;
ProcCopyMemoryToImage                                      copyMemoryToImage;
ProcCopyMemoryToImageEXT                                   copyMemoryToImageEXT;
ProcCopyMemoryToMicromapEXT                                copyMemoryToMicromapEXT;
ProcCopyMicromapEXT                                        copyMicromapEXT;
ProcCopyMicromapToMemoryEXT                                copyMicromapToMemoryEXT;
ProcCreateAccelerationStructureKHR                         createAccelerationStructureKHR;
ProcCreateAccelerationStructureNV                          createAccelerationStructureNV;
ProcCreateBuffer                                           createBuffer;
ProcCreateBufferView                                       createBufferView;
ProcCreateCommandPool                                      createCommandPool;
ProcCreateComputePipelines                                 createComputePipelines;
ProcCreateCuFunctionNVX                                    createCuFunctionNVX;
ProcCreateCuModuleNVX                                      createCuModuleNVX;
ProcCreateCudaFunctionNV                                   createCudaFunctionNV;
ProcCreateCudaModuleNV                                     createCudaModuleNV;
ProcCreateDeferredOperationKHR                             createDeferredOperationKHR;
ProcCreateDescriptorPool                                   createDescriptorPool;
ProcCreateDescriptorSetLayout                              createDescriptorSetLayout;
ProcCreateDescriptorUpdateTemplate                         createDescriptorUpdateTemplate;
ProcCreateDescriptorUpdateTemplateKHR                      createDescriptorUpdateTemplateKHR;
ProcCreateEvent                                            createEvent;
ProcCreateFence                                            createFence;
ProcCreateFramebuffer                                      createFramebuffer;
ProcCreateGraphicsPipelines                                createGraphicsPipelines;
ProcCreateImage                                            createImage;
ProcCreateImageView                                        createImageView;
ProcCreateIndirectCommandsLayoutEXT                        createIndirectCommandsLayoutEXT;
ProcCreateIndirectCommandsLayoutNV                         createIndirectCommandsLayoutNV;
ProcCreateIndirectExecutionSetEXT                          createIndirectExecutionSetEXT;
ProcCreateMicromapEXT                                      createMicromapEXT;
ProcCreateOpticalFlowSessionNV                             createOpticalFlowSessionNV;
ProcCreatePipelineBinariesKHR                              createPipelineBinariesKHR;
ProcCreatePipelineCache                                    createPipelineCache;
ProcCreatePipelineLayout                                   createPipelineLayout;
ProcCreatePrivateDataSlot                                  createPrivateDataSlot;
ProcCreatePrivateDataSlotEXT                               createPrivateDataSlotEXT;
ProcCreateQueryPool                                        createQueryPool;
ProcCreateRayTracingPipelinesKHR                           createRayTracingPipelinesKHR;
ProcCreateRayTracingPipelinesNV                            createRayTracingPipelinesNV;
ProcCreateRenderPass                                       createRenderPass;
ProcCreateRenderPass2                                      createRenderPass2;
ProcCreateRenderPass2KHR                                   createRenderPass2KHR;
ProcCreateSampler                                          createSampler;
ProcCreateSamplerYcbcrConversion                           createSamplerYcbcrConversion;
ProcCreateSamplerYcbcrConversionKHR                        createSamplerYcbcrConversionKHR;
ProcCreateSemaphore                                        createSemaphore;
ProcCreateShaderModule                                     createShaderModule;
ProcCreateShadersEXT                                       createShadersEXT;
ProcCreateSharedSwapchainsKHR                              createSharedSwapchainsKHR;
ProcCreateSwapchainKHR                                     createSwapchainKHR;
ProcCreateValidationCacheEXT                               createValidationCacheEXT;
ProcCreateVideoSessionKHR                                  createVideoSessionKHR;
ProcCreateVideoSessionParametersKHR                        createVideoSessionParametersKHR;
ProcDebugMarkerSetObjectNameEXT                            debugMarkerSetObjectNameEXT;
ProcDebugMarkerSetObjectTagEXT                             debugMarkerSetObjectTagEXT;
ProcDeferredOperationJoinKHR                               deferredOperationJoinKHR;
ProcDestroyAccelerationStructureKHR                        destroyAccelerationStructureKHR;
ProcDestroyAccelerationStructureNV                         destroyAccelerationStructureNV;
ProcDestroyBuffer                                          destroyBuffer;
ProcDestroyBufferView                                      destroyBufferView;
ProcDestroyCommandPool                                     destroyCommandPool;
ProcDestroyCuFunctionNVX                                   destroyCuFunctionNVX;
ProcDestroyCuModuleNVX                                     destroyCuModuleNVX;
ProcDestroyCudaFunctionNV                                  destroyCudaFunctionNV;
ProcDestroyCudaModuleNV                                    destroyCudaModuleNV;
ProcDestroyDeferredOperationKHR                            destroyDeferredOperationKHR;
ProcDestroyDescriptorPool                                  destroyDescriptorPool;
ProcDestroyDescriptorSetLayout                             destroyDescriptorSetLayout;
ProcDestroyDescriptorUpdateTemplate                        destroyDescriptorUpdateTemplate;
ProcDestroyDescriptorUpdateTemplateKHR                     destroyDescriptorUpdateTemplateKHR;
ProcDestroyDevice                                          destroyDevice;
ProcDestroyEvent                                           destroyEvent;
ProcDestroyFence                                           destroyFence;
ProcDestroyFramebuffer                                     destroyFramebuffer;
ProcDestroyImage                                           destroyImage;
ProcDestroyImageView                                       destroyImageView;
ProcDestroyIndirectCommandsLayoutEXT                       destroyIndirectCommandsLayoutEXT;
ProcDestroyIndirectCommandsLayoutNV                        destroyIndirectCommandsLayoutNV;
ProcDestroyIndirectExecutionSetEXT                         destroyIndirectExecutionSetEXT;
ProcDestroyMicromapEXT                                     destroyMicromapEXT;
ProcDestroyOpticalFlowSessionNV                            destroyOpticalFlowSessionNV;
ProcDestroyPipeline                                        destroyPipeline;
ProcDestroyPipelineBinaryKHR                               destroyPipelineBinaryKHR;
ProcDestroyPipelineCache                                   destroyPipelineCache;
ProcDestroyPipelineLayout                                  destroyPipelineLayout;
ProcDestroyPrivateDataSlot                                 destroyPrivateDataSlot;
ProcDestroyPrivateDataSlotEXT                              destroyPrivateDataSlotEXT;
ProcDestroyQueryPool                                       destroyQueryPool;
ProcDestroyRenderPass                                      destroyRenderPass;
ProcDestroySampler                                         destroySampler;
ProcDestroySamplerYcbcrConversion                          destroySamplerYcbcrConversion;
ProcDestroySamplerYcbcrConversionKHR                       destroySamplerYcbcrConversionKHR;
ProcDestroySemaphore                                       destroySemaphore;
ProcDestroyShaderEXT                                       destroyShaderEXT;
ProcDestroyShaderModule                                    destroyShaderModule;
ProcDestroySwapchainKHR                                    destroySwapchainKHR;
ProcDestroyValidationCacheEXT                              destroyValidationCacheEXT;
ProcDestroyVideoSessionKHR                                 destroyVideoSessionKHR;
ProcDestroyVideoSessionParametersKHR                       destroyVideoSessionParametersKHR;
ProcDeviceWaitIdle                                         deviceWaitIdle;
ProcDisplayPowerControlEXT                                 displayPowerControlEXT;
ProcEndCommandBuffer                                       endCommandBuffer;
ProcExportMetalObjectsEXT                                  exportMetalObjectsEXT;
ProcFlushMappedMemoryRanges                                flushMappedMemoryRanges;
ProcFreeCommandBuffers                                     freeCommandBuffers;
ProcFreeDescriptorSets                                     freeDescriptorSets;
ProcFreeMemory                                             freeMemory;
ProcGetAccelerationStructureBuildSizesKHR                  getAccelerationStructureBuildSizesKHR;
ProcGetAccelerationStructureDeviceAddressKHR               getAccelerationStructureDeviceAddressKHR;
ProcGetAccelerationStructureHandleNV                       getAccelerationStructureHandleNV;
ProcGetAccelerationStructureMemoryRequirementsNV           getAccelerationStructureMemoryRequirementsNV;
ProcGetAccelerationStructureOpaqueCaptureDescriptorDataEXT getAccelerationStructureOpaqueCaptureDescriptorDataEXT;
ProcGetBufferDeviceAddress                                 getBufferDeviceAddress;
ProcGetBufferDeviceAddressEXT                              getBufferDeviceAddressEXT;
ProcGetBufferDeviceAddressKHR                              getBufferDeviceAddressKHR;
ProcGetBufferMemoryRequirements                            getBufferMemoryRequirements;
ProcGetBufferMemoryRequirements2                           getBufferMemoryRequirements2;
ProcGetBufferMemoryRequirements2KHR                        getBufferMemoryRequirements2KHR;
ProcGetBufferOpaqueCaptureAddress                          getBufferOpaqueCaptureAddress;
ProcGetBufferOpaqueCaptureAddressKHR                       getBufferOpaqueCaptureAddressKHR;
ProcGetBufferOpaqueCaptureDescriptorDataEXT                getBufferOpaqueCaptureDescriptorDataEXT;
ProcGetCalibratedTimestampsEXT                             getCalibratedTimestampsEXT;
ProcGetCalibratedTimestampsKHR                             getCalibratedTimestampsKHR;
ProcGetClusterAccelerationStructureBuildSizesNV            getClusterAccelerationStructureBuildSizesNV;
ProcGetCudaModuleCacheNV                                   getCudaModuleCacheNV;
ProcGetDeferredOperationMaxConcurrencyKHR                  getDeferredOperationMaxConcurrencyKHR;
ProcGetDeferredOperationResultKHR                          getDeferredOperationResultKHR;
ProcGetDescriptorEXT                                       getDescriptorEXT;
ProcGetDescriptorSetHostMappingVALVE                       getDescriptorSetHostMappingVALVE;
ProcGetDescriptorSetLayoutBindingOffsetEXT                 getDescriptorSetLayoutBindingOffsetEXT;
ProcGetDescriptorSetLayoutHostMappingInfoVALVE             getDescriptorSetLayoutHostMappingInfoVALVE;
ProcGetDescriptorSetLayoutSizeEXT                          getDescriptorSetLayoutSizeEXT;
ProcGetDescriptorSetLayoutSupport                          getDescriptorSetLayoutSupport;
ProcGetDescriptorSetLayoutSupportKHR                       getDescriptorSetLayoutSupportKHR;
ProcGetDeviceAccelerationStructureCompatibilityKHR         getDeviceAccelerationStructureCompatibilityKHR;
ProcGetDeviceBufferMemoryRequirements                      getDeviceBufferMemoryRequirements;
ProcGetDeviceBufferMemoryRequirementsKHR                   getDeviceBufferMemoryRequirementsKHR;
ProcGetDeviceFaultInfoEXT                                  getDeviceFaultInfoEXT;
ProcGetDeviceGroupPeerMemoryFeatures                       getDeviceGroupPeerMemoryFeatures;
ProcGetDeviceGroupPeerMemoryFeaturesKHR                    getDeviceGroupPeerMemoryFeaturesKHR;
ProcGetDeviceGroupPresentCapabilitiesKHR                   getDeviceGroupPresentCapabilitiesKHR;
ProcGetDeviceGroupSurfacePresentModes2EXT                  getDeviceGroupSurfacePresentModes2EXT;
ProcGetDeviceGroupSurfacePresentModesKHR                   getDeviceGroupSurfacePresentModesKHR;
ProcGetDeviceImageMemoryRequirements                       getDeviceImageMemoryRequirements;
ProcGetDeviceImageMemoryRequirementsKHR                    getDeviceImageMemoryRequirementsKHR;
ProcGetDeviceImageSparseMemoryRequirements                 getDeviceImageSparseMemoryRequirements;
ProcGetDeviceImageSparseMemoryRequirementsKHR              getDeviceImageSparseMemoryRequirementsKHR;
ProcGetDeviceImageSubresourceLayout                        getDeviceImageSubresourceLayout;
ProcGetDeviceImageSubresourceLayoutKHR                     getDeviceImageSubresourceLayoutKHR;
ProcGetDeviceMemoryCommitment                              getDeviceMemoryCommitment;
ProcGetDeviceMemoryOpaqueCaptureAddress                    getDeviceMemoryOpaqueCaptureAddress;
ProcGetDeviceMemoryOpaqueCaptureAddressKHR                 getDeviceMemoryOpaqueCaptureAddressKHR;
ProcGetDeviceMicromapCompatibilityEXT                      getDeviceMicromapCompatibilityEXT;
ProcGetDeviceProcAddr                                      getDeviceProcAddr;
ProcGetDeviceQueue                                         getDeviceQueue;
ProcGetDeviceQueue2                                        getDeviceQueue2;
ProcGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI          getDeviceSubpassShadingMaxWorkgroupSizeHUAWEI;
ProcGetDynamicRenderingTilePropertiesQCOM                  getDynamicRenderingTilePropertiesQCOM;
ProcGetEncodedVideoSessionParametersKHR                    getEncodedVideoSessionParametersKHR;
ProcGetEventStatus                                         getEventStatus;
ProcGetFenceFdKHR                                          getFenceFdKHR;
ProcGetFenceStatus                                         getFenceStatus;
ProcGetFenceWin32HandleKHR                                 getFenceWin32HandleKHR;
ProcGetFramebufferTilePropertiesQCOM                       getFramebufferTilePropertiesQCOM;
ProcGetGeneratedCommandsMemoryRequirementsEXT              getGeneratedCommandsMemoryRequirementsEXT;
ProcGetGeneratedCommandsMemoryRequirementsNV               getGeneratedCommandsMemoryRequirementsNV;
ProcGetImageDrmFormatModifierPropertiesEXT                 getImageDrmFormatModifierPropertiesEXT;
ProcGetImageMemoryRequirements                             getImageMemoryRequirements;
ProcGetImageMemoryRequirements2                            getImageMemoryRequirements2;
ProcGetImageMemoryRequirements2KHR                         getImageMemoryRequirements2KHR;
ProcGetImageOpaqueCaptureDescriptorDataEXT                 getImageOpaqueCaptureDescriptorDataEXT;
ProcGetImageSparseMemoryRequirements                       getImageSparseMemoryRequirements;
ProcGetImageSparseMemoryRequirements2                      getImageSparseMemoryRequirements2;
ProcGetImageSparseMemoryRequirements2KHR                   getImageSparseMemoryRequirements2KHR;
ProcGetImageSubresourceLayout                              getImageSubresourceLayout;
ProcGetImageSubresourceLayout2                             getImageSubresourceLayout2;
ProcGetImageSubresourceLayout2EXT                          getImageSubresourceLayout2EXT;
ProcGetImageSubresourceLayout2KHR                          getImageSubresourceLayout2KHR;
ProcGetImageViewAddressNVX                                 getImageViewAddressNVX;
ProcGetImageViewHandle64NVX                                getImageViewHandle64NVX;
ProcGetImageViewHandleNVX                                  getImageViewHandleNVX;
ProcGetImageViewOpaqueCaptureDescriptorDataEXT             getImageViewOpaqueCaptureDescriptorDataEXT;
ProcGetLatencyTimingsNV                                    getLatencyTimingsNV;
ProcGetMemoryFdKHR                                         getMemoryFdKHR;
ProcGetMemoryFdPropertiesKHR                               getMemoryFdPropertiesKHR;
ProcGetMemoryHostPointerPropertiesEXT                      getMemoryHostPointerPropertiesEXT;
ProcGetMemoryMetalHandleEXT                                getMemoryMetalHandleEXT;
ProcGetMemoryMetalHandlePropertiesEXT                      getMemoryMetalHandlePropertiesEXT;
ProcGetMemoryRemoteAddressNV                               getMemoryRemoteAddressNV;
ProcGetMemoryWin32HandleKHR                                getMemoryWin32HandleKHR;
ProcGetMemoryWin32HandleNV                                 getMemoryWin32HandleNV;
ProcGetMemoryWin32HandlePropertiesKHR                      getMemoryWin32HandlePropertiesKHR;
ProcGetMicromapBuildSizesEXT                               getMicromapBuildSizesEXT;
ProcGetPartitionedAccelerationStructuresBuildSizesNV       getPartitionedAccelerationStructuresBuildSizesNV;
ProcGetPastPresentationTimingGOOGLE                        getPastPresentationTimingGOOGLE;
ProcGetPerformanceParameterINTEL                           getPerformanceParameterINTEL;
ProcGetPipelineBinaryDataKHR                               getPipelineBinaryDataKHR;
ProcGetPipelineCacheData                                   getPipelineCacheData;
ProcGetPipelineExecutableInternalRepresentationsKHR        getPipelineExecutableInternalRepresentationsKHR;
ProcGetPipelineExecutablePropertiesKHR                     getPipelineExecutablePropertiesKHR;
ProcGetPipelineExecutableStatisticsKHR                     getPipelineExecutableStatisticsKHR;
ProcGetPipelineIndirectDeviceAddressNV                     getPipelineIndirectDeviceAddressNV;
ProcGetPipelineIndirectMemoryRequirementsNV                getPipelineIndirectMemoryRequirementsNV;
ProcGetPipelineKeyKHR                                      getPipelineKeyKHR;
ProcGetPipelinePropertiesEXT                               getPipelinePropertiesEXT;
ProcGetPrivateData                                         getPrivateData;
ProcGetPrivateDataEXT                                      getPrivateDataEXT;
ProcGetQueryPoolResults                                    getQueryPoolResults;
ProcGetQueueCheckpointData2NV                              getQueueCheckpointData2NV;
ProcGetQueueCheckpointDataNV                               getQueueCheckpointDataNV;
ProcGetRayTracingCaptureReplayShaderGroupHandlesKHR        getRayTracingCaptureReplayShaderGroupHandlesKHR;
ProcGetRayTracingShaderGroupHandlesKHR                     getRayTracingShaderGroupHandlesKHR;
ProcGetRayTracingShaderGroupHandlesNV                      getRayTracingShaderGroupHandlesNV;
ProcGetRayTracingShaderGroupStackSizeKHR                   getRayTracingShaderGroupStackSizeKHR;
ProcGetRefreshCycleDurationGOOGLE                          getRefreshCycleDurationGOOGLE;
ProcGetRenderAreaGranularity                               getRenderAreaGranularity;
ProcGetRenderingAreaGranularity                            getRenderingAreaGranularity;
ProcGetRenderingAreaGranularityKHR                         getRenderingAreaGranularityKHR;
ProcGetSamplerOpaqueCaptureDescriptorDataEXT               getSamplerOpaqueCaptureDescriptorDataEXT;
ProcGetSemaphoreCounterValue                               getSemaphoreCounterValue;
ProcGetSemaphoreCounterValueKHR                            getSemaphoreCounterValueKHR;
ProcGetSemaphoreFdKHR                                      getSemaphoreFdKHR;
ProcGetSemaphoreWin32HandleKHR                             getSemaphoreWin32HandleKHR;
ProcGetShaderBinaryDataEXT                                 getShaderBinaryDataEXT;
ProcGetShaderInfoAMD                                       getShaderInfoAMD;
ProcGetShaderModuleCreateInfoIdentifierEXT                 getShaderModuleCreateInfoIdentifierEXT;
ProcGetShaderModuleIdentifierEXT                           getShaderModuleIdentifierEXT;
ProcGetSwapchainCounterEXT                                 getSwapchainCounterEXT;
ProcGetSwapchainImagesKHR                                  getSwapchainImagesKHR;
ProcGetSwapchainStatusKHR                                  getSwapchainStatusKHR;
ProcGetValidationCacheDataEXT                              getValidationCacheDataEXT;
ProcGetVideoSessionMemoryRequirementsKHR                   getVideoSessionMemoryRequirementsKHR;
ProcImportFenceFdKHR                                       importFenceFdKHR;
ProcImportFenceWin32HandleKHR                              importFenceWin32HandleKHR;
ProcImportSemaphoreFdKHR                                   importSemaphoreFdKHR;
ProcImportSemaphoreWin32HandleKHR                          importSemaphoreWin32HandleKHR;
ProcInitializePerformanceApiINTEL                          initializePerformanceApiINTEL;
ProcInvalidateMappedMemoryRanges                           invalidateMappedMemoryRanges;
ProcLatencySleepNV                                         latencySleepNV;
ProcMapMemory                                              mapMemory;
ProcMapMemory2                                             mapMemory2;
ProcMapMemory2KHR                                          mapMemory2KHR;
ProcMergePipelineCaches                                    mergePipelineCaches;
ProcMergeValidationCachesEXT                               mergeValidationCachesEXT;
ProcQueueBeginDebugUtilsLabelEXT                           queueBeginDebugUtilsLabelEXT;
ProcQueueBindSparse                                        queueBindSparse;
ProcQueueEndDebugUtilsLabelEXT                             queueEndDebugUtilsLabelEXT;
ProcQueueInsertDebugUtilsLabelEXT                          queueInsertDebugUtilsLabelEXT;
ProcQueueNotifyOutOfBandNV                                 queueNotifyOutOfBandNV;
ProcQueuePresentKHR                                        queuePresentKHR;
ProcQueueSetPerformanceConfigurationINTEL                  queueSetPerformanceConfigurationINTEL;
ProcQueueSubmit                                            queueSubmit;
ProcQueueSubmit2                                           queueSubmit2;
ProcQueueSubmit2KHR                                        queueSubmit2KHR;
ProcQueueWaitIdle                                          queueWaitIdle;
ProcRegisterDeviceEventEXT                                 registerDeviceEventEXT;
ProcRegisterDisplayEventEXT                                registerDisplayEventEXT;
ProcReleaseCapturedPipelineDataKHR                         releaseCapturedPipelineDataKHR;
ProcReleaseFullScreenExclusiveModeEXT                      releaseFullScreenExclusiveModeEXT;
ProcReleasePerformanceConfigurationINTEL                   releasePerformanceConfigurationINTEL;
ProcReleaseProfilingLockKHR                                releaseProfilingLockKHR;
ProcReleaseSwapchainImagesEXT                              releaseSwapchainImagesEXT;
ProcResetCommandBuffer                                     resetCommandBuffer;
ProcResetCommandPool                                       resetCommandPool;
ProcResetDescriptorPool                                    resetDescriptorPool;
ProcResetEvent                                             resetEvent;
ProcResetFences                                            resetFences;
ProcResetQueryPool                                         resetQueryPool;
ProcResetQueryPoolEXT                                      resetQueryPoolEXT;
ProcSetDebugUtilsObjectNameEXT                             setDebugUtilsObjectNameEXT;
ProcSetDebugUtilsObjectTagEXT                              setDebugUtilsObjectTagEXT;
ProcSetDeviceMemoryPriorityEXT                             setDeviceMemoryPriorityEXT;
ProcSetEvent                                               setEvent;
ProcSetHdrMetadataEXT                                      setHdrMetadataEXT;
ProcSetLatencyMarkerNV                                     setLatencyMarkerNV;
ProcSetLatencySleepModeNV                                  setLatencySleepModeNV;
ProcSetLocalDimmingAMD                                     setLocalDimmingAMD;
ProcSetPrivateData                                         setPrivateData;
ProcSetPrivateDataEXT                                      setPrivateDataEXT;
ProcSignalSemaphore                                        signalSemaphore;
ProcSignalSemaphoreKHR                                     signalSemaphoreKHR;
ProcTransitionImageLayout                                  transitionImageLayout;
ProcTransitionImageLayoutEXT                               transitionImageLayoutEXT;
ProcTrimCommandPool                                        trimCommandPool;
ProcTrimCommandPoolKHR                                     trimCommandPoolKHR;
ProcUninitializePerformanceApiINTEL                        uninitializePerformanceApiINTEL;
ProcUnmapMemory                                            unmapMemory;
ProcUnmapMemory2                                           unmapMemory2;
ProcUnmapMemory2KHR                                        unmapMemory2KHR;
ProcUpdateDescriptorSetWithTemplate                        updateDescriptorSetWithTemplate;
ProcUpdateDescriptorSetWithTemplateKHR                     updateDescriptorSetWithTemplateKHR;
ProcUpdateDescriptorSets                                   updateDescriptorSets;
ProcUpdateIndirectExecutionSetPipelineEXT                  updateIndirectExecutionSetPipelineEXT;
ProcUpdateIndirectExecutionSetShaderEXT                    updateIndirectExecutionSetShaderEXT;
ProcUpdateVideoSessionParametersKHR                        updateVideoSessionParametersKHR;
ProcWaitForFences                                          waitForFences;
ProcWaitForPresentKHR                                      waitForPresentKHR;
ProcWaitSemaphores                                         waitSemaphores;
ProcWaitSemaphoresKHR                                      waitSemaphoresKHR;
ProcWriteAccelerationStructuresPropertiesKHR               writeAccelerationStructuresPropertiesKHR;
ProcWriteMicromapsPropertiesEXT                            writeMicromapsPropertiesEXT;
