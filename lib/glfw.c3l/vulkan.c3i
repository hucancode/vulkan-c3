module glfw @if($defined(env::GLFW_INCLUDE_VULKAN) && env::GLFW_INCLUDE_VULKAN);
import vk;

fn int vulkanSupported() @extern("glfwVulkanSupported");

fn vk::ProcVoidFunction getInstanceProcAddress(vk::Instance instance, ZString procname)
  @extern("glfwGetInstanceProcAddress");

fn int getPhysicalDevicePresentationSupport(vk::Instance instance, vk::PhysicalDevice device, uint queuefamily)
  @extern("glfwGetPhysicalDevicePresentationSupport");

fn vk::Result createWindowSurface(vk::Instance instance, Window* window, vk::AllocationCallbacks* allocator, vk::SurfaceKHR* surface)
  @extern("glfwCreateWindowSurface");

fn ZString* getRequiredInstanceExtensions(ulong* count) @extern("glfwGetRequiredInstanceExtensions");
